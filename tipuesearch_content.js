var tipuesearch = {"pages":[{"title":"O mně","text":"Nacházíte se na webových stránkách jednoho šíleného učitele z VOŠ a SPŠE Olomouc . Tyto stránky jsou určeny pro podporu mojí výuky. Každé téma, které aktuálně vyučuji, tady má svou stránku. Některé stránky podávají souhrnné informace, některé jsou jen sbírkou odkazů na jiná místa na internetu. Pokud vám tu něco chybí, napište mi. Pokud najdete chybu, napište mi. Motto Nikdo nevěděl, odkud přišli, ale najednou byli v Lese: Klokanice a Klokánek. Když se Pú zeptal Kryštůfka Robina: „Jak se sem dostali?\", Kryštůfek Robin řekl: „Obvyklým způsobem, jestli víš, jak to myslím, Pú,\" a Pú, který to nevěděl, řekl: „Aha!\" Pak dvakrát kývl hlavou a řekl: „Obvyklým způsobem. Ach tak!\" Marek Nožka","tags":"pages","url":"https://chytrosti.marrek.cz/pages/o-mne.html","loc":"https://chytrosti.marrek.cz/pages/o-mne.html"},{"title":"Základní použití časovače","text":"Náš STM8S208RB má na těle celkem čtyři časovače: TIM1 , TIM2 , TIM3 a TIM4 . TIM4 TIM4 je nejjednodušší. Čítač je 8-bitový a předdělička umožňuje dělit kmitočet /1, /2, /4, /8, /16, /32, /64 a /128. Auto-reload register říká kam až se bude čítat – tedy nastavuje strop časovače. Nastavení se děje pomocí funkce TIM4_TimeBaseInit(PRESCALER, PERIOD) , kde PRESCALER je makro, pro nastavení děličky a PERIOD je 8-bitové číslo. 1 TIM4_TimeBaseInit ( TIM4_PRESCALER_128 , 125 - 1 ); Takže pokud máme nastaven kmitočet na 16MHz znamená to že čítač čítá do hodnoty 125 (respektive 124 protože čítáme od nuly) s frekvencí 16MHz/128 == 125 kHz . Znamená to tedy, že každou milisekundu dojde k auto-reloadu a je vyvoláno přerušení od časovače TIM4 . Aby vše fungovalo musíme povolit přerušení a napsat tělo obslužné rutiny přerušení. 1 2 3 4 5 6 7 8 9 10 11 void setup ( void ) { enableInterrupts (); TIM4_Cmd ( ENABLE ); ...... } INTERRUPT_HANDLER ( TIM4_UPD_OVF_IRQHandler , 23 ) { TIM4_ClearFlag ( TIM4_FLAG_UPDATE ); // vymažu vlajku signalizující přerušení miliseconds ++ ; // udělám co je třeba.... } Tento kód je například použito v knihovně milis , která umožňuje zjistit počet milisekund uplynulých od \"spuštění programu\". TIM2 a TIM3","tags":"MITka","url":"https://chytrosti.marrek.cz/zakladni-pouziti-casovace.html","loc":"https://chytrosti.marrek.cz/zakladni-pouziti-casovace.html"},{"title":"MIT","text":"Pro výuku mikroprocesorové techniky používáme vývojovou desku Nucleo- 8S208RB s mikroprocesorem STM8S208RB . Celá řada STM8S používá stejnou sadu periferií. Jejich popis najdete v reference manuálu zde . Různé čipy pak obsahují různou sadu těchto periferií. Co přesně se nachází na kterém čipu (plus další specifické věci) lze najít v datasheetu: STM8S208 zde STM8S103 zde STM8S105 zde Pár odkazů souvisejících s jazykem C http://www.fit.vutbr.cz/~martinek/clang/ http://jaknaprojekty.davidm.cz/ https://www.tutorialspoint.com/cprogramming/ Wikibook Programuje v jazyce C . Periferie Základní použití časovače OpenSource nástroje nejen pro Linux Kompilátor SDCC Jako vývojové prostředí doporučuji VSCodium Starší anglický návod s několika mouchama: https://github.com/hbendalibraham/stm8_started Kompletní a novější český návod: připravuje se :) … a moje STM8S šablona https://github.com/spseol/start-stm8 Nástroje pro Widle Vše velmi hezky zpracoval Michal Dudka na Elektromyši . Jako vývojové prostředí používáme STVD s komipilátorem Cosmic . Oba nástroje je možné bezplatně používat, když se zaregistrujete. Bohužel nejsou ani jeden OpenSource .","tags":"MITka","url":"https://chytrosti.marrek.cz/mit.html","loc":"https://chytrosti.marrek.cz/mit.html"},{"title":"Vývoj STM8 s OpenSource nástroji","text":"https://github.com/hbendalibraham/stm8_started Flashing Kompilace Debug","tags":"MITka","url":"https://chytrosti.marrek.cz/vyvoj-stm8-s-opensource-nastroji.html","loc":"https://chytrosti.marrek.cz/vyvoj-stm8-s-opensource-nastroji.html"},{"title":"SIT","text":"Totot tuje","tags":"SÍTě","url":"https://chytrosti.marrek.cz/sit.html","loc":"https://chytrosti.marrek.cz/sit.html"},{"title":"PSK","text":"kokodák lalal","tags":"PSKáčko","url":"https://chytrosti.marrek.cz/psk.html","loc":"https://chytrosti.marrek.cz/psk.html"},{"title":"PRG","text":"Jak na to? jednoduše :-)","tags":"Programování","url":"https://chytrosti.marrek.cz/prg.html","loc":"https://chytrosti.marrek.cz/prg.html"}]};