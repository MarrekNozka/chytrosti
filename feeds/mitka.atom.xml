<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Chytrosti - MITka</title><link href="https://chytrosti.marrek.cz/" rel="alternate"></link><link href="https://chytrosti.marrek.cz/feeds/mitka.atom.xml" rel="self"></link><id>https://chytrosti.marrek.cz/</id><updated>2024-10-23T19:32:20+02:00</updated><entry><title>MIT</title><link href="https://chytrosti.marrek.cz/mit.html" rel="alternate"></link><published>2024-10-23T19:32:20+02:00</published><updated>2024-10-23T19:32:20+02:00</updated><author><name>Marrek Nožka</name></author><id>tag:chytrosti.marrek.cz,2024-10-23:/mit.html</id><summary type="html">
&lt;p&gt;Pro výuku mikroprocesorové techniky používáme v současné době mikroprocesory řady 
&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm8s-series.html"&gt;&lt;span class="caps"&gt;STM8S&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="dlazdice flex-center"&gt;
&lt;p&gt;&lt;a href="https://chytrosti.marrek.cz/projektove-ulohy-mit.html"&gt;
&lt;img alt="" src="https://chytrosti.marrek.cz/mit/dlazdice/projekty.png"/&gt;
Projektové úlohy
&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="dokumentace"&gt;Dokumentace&lt;a class="headerlink" href="#dokumentace" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Celá řada &lt;span class="caps"&gt;STM8S&lt;/span&gt; používá stejnou sadu periferií. Jejich popis najdete
v &lt;a href="https://duckduckgo.com/?q=STM8S+reference+manual"&gt;reference manuálu&lt;/a&gt;
&lt;a href="https://www.st.com/content/ccc/resource/technical/document/reference_manual/9a/1b/85/07/ca/eb/4f/dd/CD00190271.pdf/files/CD00190271.pdf/jcr:content/translations/en.CD00190271.pdf"&gt;zde&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Různé čipy pak obsahují různou sadu těchto periferií. Co přesně se nachází na
kterém čipu (plus další specifické věci) lze najít v …&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Pro výuku mikroprocesorové techniky používáme v současné době mikroprocesory řady 
&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm8s-series.html"&gt;&lt;span class="caps"&gt;STM8S&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="dlazdice flex-center"&gt;
&lt;p&gt;&lt;a href="https://chytrosti.marrek.cz/projektove-ulohy-mit.html"&gt;
&lt;img alt="" src="https://chytrosti.marrek.cz/mit/dlazdice/projekty.png"/&gt;
Projektové úlohy
&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="dokumentace"&gt;Dokumentace&lt;a class="headerlink" href="#dokumentace" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Celá řada &lt;span class="caps"&gt;STM8S&lt;/span&gt; používá stejnou sadu periferií. Jejich popis najdete
v &lt;a href="https://duckduckgo.com/?q=STM8S+reference+manual"&gt;reference manuálu&lt;/a&gt;
&lt;a href="https://www.st.com/content/ccc/resource/technical/document/reference_manual/9a/1b/85/07/ca/eb/4f/dd/CD00190271.pdf/files/CD00190271.pdf/jcr:content/translations/en.CD00190271.pdf"&gt;zde&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Různé čipy pak obsahují různou sadu těchto periferií. Co přesně se nachází na
kterém čipu (plus další specifické věci) lze najít v datasheetu:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://search.brave.com/search?q=STM8S103+datasheet"&gt;&lt;span class="caps"&gt;STM8S103&lt;/span&gt;&lt;/a&gt;
&lt;a href="https://www.st.com/resource/en/datasheet/stm8s103f2.pdf"&gt;zde&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://search.brave.com/search?q=STM8S105+datasheet"&gt;&lt;span class="caps"&gt;STM8S105&lt;/span&gt;&lt;/a&gt;
&lt;a href="https://www.st.com/resource/en/datasheet/stm8s105c4.pdf"&gt;zde&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://search.brave.com/search?q=STM8S208+datasheet"&gt;&lt;span class="caps"&gt;STM8S208&lt;/span&gt;&lt;/a&gt;
&lt;a href="https://www.st.com/resource/en/datasheet/stm8s207mb.pdf"&gt;zde&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="103/105 line" src="https://www.st.com/content/ccc/fragment/product_related/line_information/line_level_diagram/group0/b0/7b/7c/ec/41/2e/4a/8e/obn-stm8s103105-line-ln754/files/obn-stm8s103105-line-ln754.jpg/jcr:content/translations/en.obn-stm8s103105-line-ln754.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;Přehled jednotlivých čipů jednotlivých řad
&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm8s-series.html"&gt;rodiny &lt;span class="caps"&gt;STM8S&lt;/span&gt;&lt;/a&gt;
pak najdete zde:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm8s-application-specific-line.html"&gt; Application Specific Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm8s-value-line.html"&gt;&lt;span class="caps"&gt;STM8S&lt;/span&gt; Value line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm8s103-105.html"&gt;&lt;span class="caps"&gt;STM8S103&lt;/span&gt;/105&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm8s207-208.html"&gt;&lt;span class="caps"&gt;STM8S207&lt;/span&gt;/208&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="hardware"&gt;Hardware&lt;a class="headerlink" href="#hardware" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;viz sekce &lt;a href="https://chytrosti.marrek.cz/projektove-ulohy-mit.html"&gt;Projektové úlohy&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="navody"&gt;Návody&lt;a class="headerlink" href="#navody" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Zde je malý rozcestník návodů: některé jsem vytvořil já, některé 
&lt;a href="http://elektromys.eu/stm8.php"&gt;Michal Dudka&lt;/a&gt;, některé 
&lt;a href="https://gitlab.com/wykys/"&gt;Honza Vykydal&lt;/a&gt;.&lt;/p&gt;
&lt;div class="dlazdice"&gt;
&lt;p&gt;&lt;a href="https://chytrosti.marrek.cz/cecko-pac-veci-kterych-byste-si-fakt-meli-vsimnout.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/cecko2.png"/&gt;
 Céčko –  pác věcí, kterých byste si fakt měli všimnout
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://chytrosti.marrek.cz/oddelena-kompilace-a-vlastni-knihovny.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/clib.png"/&gt;
 Oddělená kompilace a vlastní knihovny
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://chytrosti.marrek.cz/deleni-v-pevne-radove-carce.html"&gt; &lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/deleni.png"/&gt;
   Dělení v pevné řadové čárce
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://chytrosti.marrek.cz/generovani-zvuku-zaklady.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/zvuk.png"/&gt;
Generování zvuku – základy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://chytrosti.marrek.cz/zakladni-pouziti-casovace.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/casovac.png"/&gt;
Základní použití časovače&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://chytrosti.marrek.cz/pouziti-casovace-jako-generatoru-pwm.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/pwm.png"/&gt;
Použití časovače jako generátoru &lt;span class="caps"&gt;PWM&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://chytrosti.marrek.cz/ultrazvukovy-meric-vzdalenosti-pomoci-timeru-tim2.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/ultrasonic.png"/&gt;
Ultrazvukový měřič vzdálenosti pomocí timeru &lt;span class="caps"&gt;TIM2&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class="dlazdice"&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_0_stvp/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/progdebug.png"/&gt;
&lt;span class="caps"&gt;STM8&lt;/span&gt; Programátory a Debuggery&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_2_stvd/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/install.png"/&gt;
Instalace a vytvoření projektu ve Windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_1_nucleo/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/nucleo.png"/&gt;
&lt;span class="caps"&gt;STM8S208&lt;/span&gt; Nucleo&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class="dlazdice"&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_3_gpio1/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/i-o.png"/&gt;
Vstupy a výstupy 1 – základy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_4_gpio2/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/button.png"/&gt;
Vstupy a výstupy 2 – tlačítko&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_5_gpio3/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/urovne.png"/&gt;
Vstupy a výstupy 3 – logické úrovně&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_6_gpio4/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/pullup.png"/&gt;
Vstupy a výstupy 4 – PullUp rezistory&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_7_gpio5/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/opendrain.png"/&gt;
Vstupy a výstupy 5 – Open-Drain&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class="dlazdice"&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_8_max7219/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/max7219.png"/&gt;
Ovládání displeje s &lt;span class="caps"&gt;MAX7219&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_9_clock/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/clock-signal.png"/&gt; Clock&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_10_lcd/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/lcd-2x16.png"/&gt;
Alfanumerické &lt;span class="caps"&gt;LCD&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_11_milis/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/multitasking.png"/&gt;
Knihovna milis – “Multitasking”&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_12_automat/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/stavovy_automat.png"/&gt;
Stavový automat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_13_chargepump/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/nabojova_pumpa.png"/&gt;
Nábojová pumpa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_14_7seg/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/7segment.png"/&gt;
Buzení 7segmentového displeje&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_15_adc1/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/adc.png"/&gt;
&lt;span class="caps"&gt;AD&lt;/span&gt; převodník&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class="dlazdice"&gt;
&lt;p&gt;&lt;a href="https://gitlab.com/wykys/stm8-xikon/-/tree/main/exti"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/ext-irq.png"/&gt;
Externí přerušení - &lt;span class="caps"&gt;EXTI&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitlab.com/wykys/stm8-xikon/-/tree/main/tim"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/counter.png"/&gt;
Čítače / Časovače&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class="dlazdice"&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/avr1_adc2/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/ir-sensor.png"/&gt;
&lt;span class="caps"&gt;IR&lt;/span&gt; senzor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/ele_i2c/clanek.html"&gt;
&lt;img alt=" " src="https://chytrosti.marrek.cz/mit/dlazdice/i2c.png"/&gt;
&lt;span class="caps"&gt;I2C&lt;/span&gt; – Relativně jednoduše&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id="dalsi-velice-cenne-informace"&gt;Další velice cenné informace&lt;a class="headerlink" href="#dalsi-velice-cenne-informace" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;… najdete u Michala v sekcích:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://elektromys.eu/elektro.php"&gt;Elektro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://elektromys.eu/kratke.php"&gt;Různé krátké poznámky&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="vyvojove-nastroje"&gt;Vývojové nástroje&lt;a class="headerlink" href="#vyvojove-nastroje" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Vývojové nástroje jsou &lt;span class="caps"&gt;IMHO&lt;/span&gt; největší slabina platformy &lt;span class="caps"&gt;STM8&lt;/span&gt;,
ale při troše snahy se to dá &lt;code&gt;:)&lt;/code&gt;. Co se ale &lt;span class="caps"&gt;ST&lt;/span&gt; povedlo, to je nástrtoj
&lt;a href="https://www.st.com/en/development-tools/stm8cubemx.html"&gt;STM8CubeMX&lt;/a&gt;.
Doporučuji si ho nainstalovat. Není nijak klíčový, ale hodí se.&lt;/p&gt;
&lt;h3 id="opensource-nastroje-nejen-pro-linux"&gt;OpenSource nástroje nejen pro Linux&lt;a class="headerlink" href="#opensource-nastroje-nejen-pro-linux" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Celou problematiku jsem zpracoval v samostatném návodu: 
&lt;strong&gt;&lt;a href="https://chytrosti.marrek.cz/stm8oss.html"&gt;Vývoj &lt;span class="caps"&gt;STM8&lt;/span&gt; s OpenSource nástroji&lt;/a&gt;&lt;/strong&gt;. 
Ve zkratce to vypadá takto: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kompilátor &lt;a href="http://sdcc.sourceforge.net/"&gt;&lt;span class="caps"&gt;SDCC&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jako vývojové prostředí doporučuji &lt;a href="https://vscodium.com/"&gt;VSCodium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Toolchain pro kompilátor &lt;span class="caps"&gt;SDCC&lt;/span&gt; a &lt;span class="caps"&gt;GNU&lt;/span&gt; Make: &lt;a href="https://gitlab.com/spseol/mit-no/STM8S-toolchain"&gt;https://gitlab.com/spseol/mit-no/&lt;span class="caps"&gt;STM8S&lt;/span&gt;-toolchain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Starší anglický návod s několika mouchama: &lt;a href="https://github.com/hbendalibraham/stm8_started"&gt;https://github.com/hbendalibraham/stm8_started&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="cosmic-stm8eclipse-balicek-pro-linux"&gt;Cosmic &lt;span class="caps"&gt;STM8&lt;/span&gt;+Eclipse balíček pro Linux&lt;a class="headerlink" href="#cosmic-stm8eclipse-balicek-pro-linux" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Zatím je vše ve fázi testování. Zveřejněno v lednu 2022:
&lt;a href="https://www.cosmicsoftware.com/download_stm8_eclipse.php"&gt;https://www.cosmicsoftware.com/download_stm8_eclipse.php&lt;/a&gt;
Projekt vypadá velmi slibně.&lt;/p&gt;
&lt;h3 id="nastroje-pro-m-windows"&gt;Nástroje pro M$ Windows&lt;a class="headerlink" href="#nastroje-pro-m-windows" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Vše velmi hezky zpracoval 
  &lt;a href="http://elektromys.eu/clanky/stm8_2_stvd/clanek.html"&gt;Michal Dudka na Elektromyši&lt;/a&gt;.
  Součástí je i vzorový projekt s knihovnami pro &lt;span class="caps"&gt;STM8S103&lt;/span&gt;, &lt;span class="caps"&gt;STM8S105&lt;/span&gt; a &lt;span class="caps"&gt;STM8S208&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Jako vývojové prostředí leze použít
  &lt;a href="https://www.st.com/en/development-tools/stvd-stm8.html"&gt;&lt;span class="caps"&gt;STVD&lt;/span&gt;&lt;/a&gt;
  s komipilátorem
  &lt;a href="https://www.cosmicsoftware.com/download_stm8_free.php"&gt;Cosmic&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Oba nástroje je možné bezplatně používat, když se zaregistrujete. Bohužel
  nejsou ani jeden 
  &lt;a href="https://cs.wikipedia.org/wiki/Otevřený_software"&gt;OpenSource&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="dalsi-uzitecne-nastroje"&gt;Další užitečné nástroje&lt;a class="headerlink" href="#dalsi-uzitecne-nastroje" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;dl&gt;
&lt;dt&gt;The Dot Factory&lt;/dt&gt;
&lt;dd&gt;Generátor obrázků a fontů pro maticové displaye&lt;/dd&gt;
&lt;dd&gt;&lt;a href="http://www.eran.io/the-dot-factory-an-lcd-font-and-image-generator/"&gt;http://www.eran.io/the-dot-factory-an-lcd-font-and-image-generator/&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id="odkazy"&gt;Odkazy&lt;a class="headerlink" href="#odkazy" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.fit.vutbr.cz/~martinek/clang/"&gt;http://www.fit.vutbr.cz/~martinek/clang/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jaknaprojekty.davidm.cz/"&gt;http://jaknaprojekty.davidm.cz/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialspoint.com/cprogramming/"&gt;https://www.tutorialspoint.com/cprogramming/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Wikibook &lt;a href="https://cs.wikipedia.org/wiki/C_(programovací_jazyk)"&gt;Programuje v jazyce C&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><category term="MITka"></category><category term="Céčko"></category><category term="STM8"></category><category term="programování"></category></entry><entry><title>Generování zvuku — základy</title><link href="https://chytrosti.marrek.cz/generovani-zvuku-zaklady.html" rel="alternate"></link><published>2024-10-23T18:17:06+02:00</published><updated>2024-10-23T18:17:06+02:00</updated><author><name>Marrek Nožka</name></author><id>tag:chytrosti.marrek.cz,2024-10-23:/generovani-zvuku-zaklady.html</id><summary type="html">
&lt;p&gt;&lt;a href="https://cs.wikipedia.org/wiki/Zvuk"&gt;Zvuk&lt;/a&gt; je jak známo mechanické vlnění.
Pro jeho vyloudění tedy potřebujeme nějaký “vlnič” – tedy elektro-akustický měnič. &lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;gt;&amp;gt;" src="https://chytrosti.marrek.cz/mit/img/piezo_obr.png"/&gt;&lt;/p&gt;
&lt;p&gt;Nejjednodušší je asi použít piezo měnič. Ten má ovšem poněkud omezený
frekvenční rozsah. Jeho frekvenční charakteristika může vypadat například takto:&lt;/p&gt;
&lt;p&gt;&lt;img alt="|=|" src="https://chytrosti.marrek.cz/mit/img/piezo_f_ch.png"/&gt;&lt;/p&gt;
&lt;p&gt;(Mimochodem prý existuje nějaký výzkum, podle kterého optimální frekvence pro
budík je 100 Hz …&lt;/p&gt;</summary><content type="html">
&lt;p&gt;&lt;a href="https://cs.wikipedia.org/wiki/Zvuk"&gt;Zvuk&lt;/a&gt; je jak známo mechanické vlnění.
Pro jeho vyloudění tedy potřebujeme nějaký “vlnič” – tedy elektro-akustický měnič. &lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;gt;&amp;gt;" src="https://chytrosti.marrek.cz/mit/img/piezo_obr.png"/&gt;&lt;/p&gt;
&lt;p&gt;Nejjednodušší je asi použít piezo měnič. Ten má ovšem poněkud omezený
frekvenční rozsah. Jeho frekvenční charakteristika může vypadat například takto:&lt;/p&gt;
&lt;p&gt;&lt;img alt="|=|" src="https://chytrosti.marrek.cz/mit/img/piezo_f_ch.png"/&gt;&lt;/p&gt;
&lt;p&gt;(Mimochodem prý existuje nějaký výzkum, podle kterého optimální frekvence pro
budík je 100 Hz; nebo to bylo 300 Hz? Prostě poměrně nízký kmitočet. Ale levné
bezporuchové piezo-měniče takto nízko prostě nejdou. Tak na nás ty budíky
pískají a pípají a my vstáváme potom naštvaní.)&lt;/p&gt;
&lt;p&gt;Další možností je použít reproduktorek. V tomto případě je třeba posílit výstup
tranzistorem. Zapojení tedy může vypadat například takto: &lt;/p&gt;
&lt;p&gt;&lt;img alt="micro-controller, piezo, repro" src="https://chytrosti.marrek.cz/mit/img/stm8-zvuk-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;Tranzistor je ve spínacím režimu a membrána reproduktoru má pouze dvě polohy.
Tedy klidovou polohu (bez proudu) nebo výchylku odpovídající kladnému proudu.
Do výchylky odpovídající zápornému proudu se membrána nedostane, protože proud
protéká vždy jedním směrem. Dioda D1 vybíjí cívku reproduktoru, při sestupné hraně.&lt;/p&gt;
&lt;p&gt;Program, který nám vyloudí frekvenci &lt;span class="math"&gt;\(500\,\mathrm{Hz}\)&lt;/span&gt; může vypadat například takto. 
Perioda je &lt;span class="math"&gt;\(2\,\mathrm{ms}\)&lt;/span&gt;. Půl periody tedy &lt;span class="math"&gt;\(1\,\mathrm{ms}\)&lt;/span&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;PZ_UP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;PZ_DOWN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="obdélníkový časový průběh %%" src="https://chytrosti.marrek.cz/mit/img/obdelnik.png"/&gt;&lt;/p&gt;
&lt;p&gt;Pokud chci jen pípnout a poté nechat chvilku ticho jednoduše nebudu cvičit s
membránou do nekonečna, ale pouze několikrát (&lt;span class="math"&gt;\(20 \cdot 2\,\mathrm{ms}\)&lt;/span&gt;) a pak nechám chvilku ticho.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;PZ_UP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;PZ_DOWN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Pípání %%" src="https://chytrosti.marrek.cz/mit/img/pipani.png"/&gt;&lt;/p&gt;
&lt;p&gt;Tento způsob práce je ale blokující, protože se pořád jen čeká. Mikroprocesor
vlastně pořádně nemůže dělat nic jiného. Proto použijeme 
&lt;a href="http://elektromys.eu/clanky/stm8_11_milis/clanek.html"&gt;multitasking&lt;/a&gt; &lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; a &lt;a href="http://elektromys.eu/clanky/stm8_12_automat/clanek.html"&gt;stavový automat&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;uint32_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;timeL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;uint32_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastTime&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;enum&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;state_of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;STATE_PAUSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;STATE_UP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;STATE_DOWN&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;STATE_UP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;uint32_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;STATE_PAUSE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;PZ_DOWN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="c1"&gt;// v pauze dám repráček do klodového stavu&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;milis&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastTime&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4321&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;lastTime&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;milis&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;STATE_UP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;STATE_UP&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;PZ_UP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;milis&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastTime&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;lastTime&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;milis&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;STATE_DOWN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;STATE_DOWN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;PZ_DOWN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;lastTime&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;milis&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;STATE_PAUSE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;milis&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lastTime&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;lastTime&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;milis&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;STATE_UP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;STATE_PAUSE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;milis&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;timeL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;timeL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;milis&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;LED_REVERSE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="zdrojove-kody"&gt;Zdrojové kódy&lt;a class="headerlink" href="#zdrojove-kody" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Kompletní zdrojové kódy naleznete v repositáři na GitHubu: &lt;br/&gt;
&lt;a href="https://github.com/spseol/STM8-zvuk-zaklad"&gt;https://github.com/spseol/&lt;span class="caps"&gt;STM8&lt;/span&gt;-zvuk-zaklad&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="beeper"&gt;Beeper&lt;a class="headerlink" href="#beeper" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Také je dobré poznamenat, že dnešní mikroprocesory mají pro generování zvuků nízkých
kmitočtů vlastní periferii nazvanou Beeper. Její použití bude pro váš program jistě 
jednodušší než si zvuk generovat samy. Ne nedá se nastavit libovolný kmitočet a krok je 
poměrně hrubý; ale často to potřebám jednoduché zvukové signalizace plně postačí.&lt;/p&gt;
&lt;p&gt;Více o této periferii nejdete 
v &lt;a href="http://elektromys.eu/clanky/stm8_17_beeper/clanek.html"&gt;Michalově článku&lt;/a&gt;.&lt;/p&gt;
&lt;div class="dlazdice"&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_17_beeper/clanek.html"&gt;
&lt;img alt="" src="https://chytrosti.marrek.cz/mit/dlazdice/beeper.png"/&gt;
&lt;span class="caps"&gt;STM8&lt;/span&gt; Beeper
&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="footnote"&gt;
&lt;hr/&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="https://github.com/spseol/start-stm8/blob/main/src/milis.c"&gt;knihovna milis&lt;/a&gt; &lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="MITka"></category><category term="Céčko"></category><category term="STM8"></category><category term="zvuk"></category></entry><entry><title>Projektové úlohy MIT</title><link href="https://chytrosti.marrek.cz/projektove-ulohy-mit.html" rel="alternate"></link><published>2024-10-22T20:13:19+02:00</published><updated>2024-10-22T20:13:19+02:00</updated><author><name>Marrek Nožka</name></author><id>tag:chytrosti.marrek.cz,2024-10-22:/projektove-ulohy-mit.html</id><summary type="html">
&lt;p&gt;&lt;img alt=" |=| 60%% " src="https://chytrosti.marrek.cz/mit/img/jezevec.webp"/&gt;&lt;/p&gt;
&lt;h2 id="co-se-od-vas-ocekava"&gt;Co se od vás očekává?&lt;a class="headerlink" href="#co-se-od-vas-ocekava" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Každý žák vypracuje dvě projektové úlohy dle vlastní volby. Zadání bude nejprve
&lt;strong&gt;schváleno vyučujícím&lt;/strong&gt;, potom se můžete dát do práce. 
Níže (
 &lt;a href="#nekolik-napadu-pro-mensi-projekt"&gt;tady&lt;/a&gt; a
 &lt;a href="#nekolik-napadu-pro-vetsi-projekt"&gt;tam&lt;/a&gt;
) uvádím několik nápadů
na zadání, kterými se můžete nechat inspirovat pokud žádný nápad nemáte.&lt;/p&gt;
&lt;h3 id="vzorove-zadani"&gt;Vzorové zadání&lt;a class="headerlink" href="#vzorove-zadani" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chytrosti.marrek.cz/mit/media/zadani_projektu-3R-vzor.pdf"&gt;&lt;span class="caps"&gt;PDF&lt;/span&gt;&lt;/a&gt;
&lt;a href="https://chytrosti.marrek.cz/mit/media/zadani_projektu-3R-vzor.odt"&gt;&lt;span class="caps"&gt;ODT&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="povinne-komponenty-projektu"&gt;Povinné komponenty projektu …&lt;/h3&gt;</summary><content type="html">
&lt;p&gt;&lt;img alt=" |=| 60%% " src="https://chytrosti.marrek.cz/mit/img/jezevec.webp"/&gt;&lt;/p&gt;
&lt;h2 id="co-se-od-vas-ocekava"&gt;Co se od vás očekává?&lt;a class="headerlink" href="#co-se-od-vas-ocekava" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Každý žák vypracuje dvě projektové úlohy dle vlastní volby. Zadání bude nejprve
&lt;strong&gt;schváleno vyučujícím&lt;/strong&gt;, potom se můžete dát do práce. 
Níže (
 &lt;a href="#nekolik-napadu-pro-mensi-projekt"&gt;tady&lt;/a&gt; a
 &lt;a href="#nekolik-napadu-pro-vetsi-projekt"&gt;tam&lt;/a&gt;
) uvádím několik nápadů
na zadání, kterými se můžete nechat inspirovat pokud žádný nápad nemáte.&lt;/p&gt;
&lt;h3 id="vzorove-zadani"&gt;Vzorové zadání&lt;a class="headerlink" href="#vzorove-zadani" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chytrosti.marrek.cz/mit/media/zadani_projektu-3R-vzor.pdf"&gt;&lt;span class="caps"&gt;PDF&lt;/span&gt;&lt;/a&gt;
&lt;a href="https://chytrosti.marrek.cz/mit/media/zadani_projektu-3R-vzor.odt"&gt;&lt;span class="caps"&gt;ODT&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="povinne-komponenty-projektu"&gt;Povinné komponenty projektu&lt;a class="headerlink" href="#povinne-komponenty-projektu" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Volte zadání tak, aby ve vašich projektech (ve všech dohromady, ne v každém)
byly obsaženy alespoň jednou následující komponenty:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Alespoň jeden projekt bude na &lt;strong&gt;vlastní &lt;span class="caps"&gt;PCB&lt;/span&gt;&lt;/strong&gt; (stačí univerzální) s
   mikroprocesorem bez vývojového kitu. Můžete použít přímo mikroprocesory s
   &lt;span class="caps"&gt;SMD&lt;/span&gt; montáží nebo už hotové desky s &lt;span class="caps"&gt;THT&lt;/span&gt; montáží. (Viz
   &lt;a href="https://gitlab.com/wykys/stm8s-dero-board"&gt;Deroboard&lt;/a&gt; a
   &lt;a href="https://www.aliexpress.com/w/wholesale-stm8s-board.html"&gt;desky&lt;/a&gt; a čipy
   &lt;span class="caps"&gt;STM8S103F3P6&lt;/span&gt; a &lt;span class="caps"&gt;STM8S105K4T6&lt;/span&gt;, které se dají běžně koupit na našem i
   zahraničním internetu.) &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;AD&lt;/span&gt; převodník&lt;/strong&gt;: například zařízení, které je ovládáno potenciometrem nebo 
   analogový teploměr nebo 
   &lt;a href="http://www.elektromys.eu/clanky/avr1_adc2/clanek.html"&gt;&lt;span class="caps"&gt;IR&lt;/span&gt; snímač, co se přizpůsobuje pozadí&lt;/a&gt; atd.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tlačítko&lt;/strong&gt; a &lt;strong&gt;Rotační encoder&lt;/strong&gt;:
   (&lt;a href="https://gitlab.com/spseol/mit-no/n-coder"&gt;viz návod&lt;/a&gt;.)  &lt;br/&gt;
&lt;img alt="15%% %center" src="https://gitlab.com/spseol/mit-no/n-coder/-/raw/main/datasheets/rotary_encoder.jpg?ref_type=heads"/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://gitlab.com/wykys/stm8-xikon/-/tree/main/tim"&gt;&lt;strong&gt;Časovač&lt;/strong&gt;&lt;/a&gt;
   – mimo knihovnu &lt;code&gt;milis.c&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;PWM&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;měření časového intervalu&lt;/li&gt;
&lt;li&gt;pravidelné zpouštění&lt;/li&gt;
&lt;li&gt;vlastní knihovna podobná nám známé &lt;code&gt;milis.c&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Rutina přerušení&lt;/strong&gt; (&lt;code&gt;stm8s_it.c&lt;/code&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/wykys/stm8-xikon/-/tree/main/exti"&gt;externí&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;interní&lt;ul&gt;
&lt;li&gt;od časovače&lt;/li&gt;
&lt;li&gt;od UARTu&lt;/li&gt;
&lt;li&gt;atd.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="volitelne-komponenty-projektu"&gt;Volitelné komponenty projektu&lt;a class="headerlink" href="#volitelne-komponenty-projektu" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Každý si dle svých preferencí zvolí komponenty tak, aby dohromady ve všech
projektech celkově získal alespoň &lt;strong&gt;7 MITcoinů&lt;/strong&gt; 💰. Pokud vaše oblíbená periferie
v seznamu chybí, rád ji tam přidám i s patřičnou cenou.&lt;/p&gt;
&lt;p&gt;&lt;img alt="1MITcoin |=| 30%%" src="https://chytrosti.marrek.cz/mit/img/MITcoin.webp"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;SPI&lt;/span&gt; (2 MITcoiny🪙)&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;I2C&lt;/span&gt; (3 MITcoiny🪙)&lt;/li&gt;
&lt;li&gt;Alfanumerický &lt;span class="caps"&gt;LCD&lt;/span&gt; display (1 MITcoin🪙)&lt;/li&gt;
&lt;li&gt;Maticová klávesnice (2 MITcoiny🪙)&lt;/li&gt;
&lt;li&gt;Generování zvuku (2 MITcoiny🪙)&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;UART&lt;/span&gt; (1 MITcoin🪙)&lt;/li&gt;
&lt;li&gt;Optická brána (1 MITcoiny🪙)&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;IR&lt;/span&gt; detekce překážky (1 MITcoiny🪙)&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;IR&lt;/span&gt; detekce překážky s odečtem pozadí (2 MITcoiny🪙)&lt;/li&gt;
&lt;li&gt;Ovládání rychlosti &lt;span class="caps"&gt;DC&lt;/span&gt; motoru (2 MITcoiny🪙)&lt;/li&gt;
&lt;li&gt;Ovládání servo-motoru (2 MITcoiny🪙)&lt;/li&gt;
&lt;li&gt;Ovládání krokového motoru (4 MITcoiny🪙)&lt;/li&gt;
&lt;li&gt;Měření vzdálenosti pomocí ultrazvuku (2 MITcoiny🪙)&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;PWM&lt;/span&gt; regulace (2 MITcoiny🪙)&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;IR&lt;/span&gt; dálkové ovládání (2 MITcoiny🪙)&lt;/li&gt;
&lt;li&gt;Měření teploty/vlhkosti si onewire komunikací (2 MITcoiny🪙)&lt;/li&gt;
&lt;li&gt;atd. atp. (X MITcoinů🪙)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="jak-bude-vypracovany-projekt-vypadat"&gt;Jak bude vypracovaný projekt vypadat?&lt;a class="headerlink" href="#jak-bude-vypracovany-projekt-vypadat" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Vypracovaný projekt bude obsahovat:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Původní zadání.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Funkční&lt;/strong&gt; zapojení – můžete použít vlastní &lt;span class="caps"&gt;PCB&lt;/span&gt;, univerzální &lt;span class="caps"&gt;PCB&lt;/span&gt; nebo nepájivé pole.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Funkční&lt;/strong&gt; program – dle zadání&lt;/li&gt;
&lt;li&gt;Projektovou dokumentaci:&lt;ul&gt;
&lt;li&gt;schema zapojení (samozřejmě v KiCADu)&lt;/li&gt;
&lt;li&gt;vývojový diagram a stručný popis činnosti programu&lt;/li&gt;
&lt;li&gt;okomentovaný zdrojový kód (hezký a barevný) v podobě textu; 
    žádné screenshoty obrazovky vývojového prostředí&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vše bude uloženo ve veřejném Git repositáři – tedy vše kromě &lt;span class="caps"&gt;HW&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Formu projektové dokumentace nechám na vás. Může to být &lt;span class="caps"&gt;PDF&lt;/span&gt; dokument nebo
&lt;span class="caps"&gt;README&lt;/span&gt; na GitLabu.&lt;/p&gt;
&lt;h2 id="namety-a-pomucky-pro-hardware"&gt;Náměty a pomůcky pro hardware&lt;a class="headerlink" href="#namety-a-pomucky-pro-hardware" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="nucleo-8s208rb"&gt;Nucleo-&lt;span class="caps"&gt;8S208RB&lt;/span&gt;&lt;a class="headerlink" href="#nucleo-8s208rb" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Ve výuce používáme vývojovou desku
&lt;a href="https://www.st.com/en/evaluation-tools/nucleo-8s208rb.html"&gt;Nucleo-&lt;span class="caps"&gt;8S208RB&lt;/span&gt;&lt;/a&gt;
s mikroprocesorem
&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm8s208rb.html"&gt;&lt;span class="caps"&gt;STM8S208RB&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nucleo-8S208RB pinout |=| 50%%" src="https://chytrosti.marrek.cz/mit/img/Nucleo-S208RB.png"/&gt;&lt;/p&gt;
&lt;p&gt;Tato deska je (ale nemusí být) napájena z &lt;span class="caps"&gt;USB&lt;/span&gt;. Obsahuje programátor s &lt;span class="caps"&gt;HW&lt;/span&gt;
debugerem a &lt;a href="#usb-to-uart-bridge"&gt;&lt;span class="caps"&gt;USB2UART&lt;/span&gt; bridge&lt;/a&gt;. Můžete si zvolit pinout,
který je Arduino-kompatibilní nebo plnohodnotný pinout, který sedí 
na &lt;a href="#univerzalni-pcb"&gt;univerzální &lt;span class="caps"&gt;PCB&lt;/span&gt;&lt;/a&gt;. Je tu tedy vše, co pro začátek
potřebujete. Vyčerpávající popis najdete v článku &lt;a href="http://elektromys.eu/clanky/stm8_1_nucleo/clanek.html"&gt;&lt;span class="caps"&gt;STM8S208&lt;/span&gt;
Nucleo&lt;/a&gt; nebo v
&lt;a href="https://www.st.com/resource/en/user_manual/dm00477617-stm8s208rbt6-nucleo64-board-stmicroelectronics.pdf"&gt;uživatelském
manuálu&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="stm8s-discovery"&gt;&lt;span class="caps"&gt;STM8S&lt;/span&gt; Discovery&lt;a class="headerlink" href="#stm8s-discovery" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Dalším zajímavým vývojovým kitem je
&lt;a href="https://www.st.com/en/evaluation-tools/stm8s-discovery.html"&gt;&lt;span class="caps"&gt;STM8S&lt;/span&gt; &lt;span class="caps"&gt;DISCOVERY&lt;/span&gt;&lt;/a&gt;
s procesorem 
&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm8s105c6.html"&gt;&lt;span class="caps"&gt;STM8S105C6&lt;/span&gt;&lt;/a&gt;.
Kit obsahuje i maličkou bastl desku a programátor lze použít k programování
libovolného procesoru &lt;span class="caps"&gt;STM8S&lt;/span&gt;. Více opět 
v &lt;a href="https://www.st.com/resource/en/user_manual/cd00250600-stm8s-discovery-stmicroelectronics.pdf"&gt;uživatelském manuálu&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="STM8S Discovery kit |=| 50%%" src="https://chytrosti.marrek.cz/mit/img/STM8S-Discovery-kit.jpg"/&gt;&lt;/p&gt;
&lt;h3 id="standalone-programator"&gt;Standalone programátor&lt;a class="headerlink" href="#standalone-programator" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Při řešení samostatných projektů budeme postupně přecházíme k vlastnímu
hardware, který by už neměl být na nepájivém poli, ale spíše na desce plošných
spojů. V těchto případech budeme potřebovat μprocesor, který bude přímo v
aplikaci a  samostatný – standalone programátor+debuger, pomocí kterého bude
možné program ladit a nahrát. Možností je vícero – moc hezky to má &lt;a href="http://elektromys.eu/clanky/stm8_0_stvp/clanek.html"&gt;popsáno
Michal&lt;/a&gt;. Doporučuji přečíst!&lt;/p&gt;
&lt;div class="dlazdice"&gt;
&lt;p&gt;&lt;a href="http://elektromys.eu/clanky/stm8_0_stvp/clanek.html"&gt;
  Programátory pro &lt;span class="caps"&gt;STM8&lt;/span&gt;
&lt;img alt="" src="https://chytrosti.marrek.cz/mit/dlazdice/programatory-ico.png"/&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id="deroboard"&gt;DeroBoard&lt;a class="headerlink" href="#deroboard" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img alt="DeroBoard photo |=| 50%%" src="https://chytrosti.marrek.cz/mit/img/deroboard-photo.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;S poměrně malou námahou si můžete ubastlit vývojovou desku &lt;a href="https://gitlab.com/wykys/stm8s-dero-board"&gt;&lt;span class="caps"&gt;STM8S&lt;/span&gt; Dero
Board&lt;/a&gt;. Tuto desku můžete použít i
pro svoje samostatné projekty. Je osazena procesorem &lt;span class="caps"&gt;STM8S103F3&lt;/span&gt;. K dispozici
máte všechny &lt;a href="https://gitlab.com/wykys/stm8s-dero-board/-/tree/main/design"&gt;zdrojové soubory pro
KiCad&lt;/a&gt; a 
hezkou &lt;a href="https://wykys.gitlab.io/stm8s-dero-board/ibom.html"&gt;rozpisku součástek&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id="nebo"&gt;Nebo…&lt;a class="headerlink" href="#nebo" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Něco podobného, se stejným procesorem lze zakoupit i od čínských výrobců:
&lt;a href="https://www.aliexpress.com/wholesale?SearchText=STM8S103F3P6+development+board"&gt;&lt;span class="caps"&gt;STM8S103F3P6&lt;/span&gt; development
board&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="STM8S103F3P6 photo |=| 50%%" src="https://chytrosti.marrek.cz/mit/img/STM8S103F3P6.jpeg"/&gt;&lt;/p&gt;
&lt;p&gt;Pokud poptáváte vybavenější procesor existuje podobná vývojová deska:
&lt;a href="https://www.aliexpress.com/wholesale?SearchText=STM8S105K4T6+Developmen+Board"&gt;&lt;span class="caps"&gt;STM8S105K4T6&lt;/span&gt; Developmen
Board&lt;/a&gt;.
Ta vám může posloužit podobně jako oficiální &lt;a href="https://www.st.com/en/evaluation-tools/stm8s-discovery.html"&gt;&lt;span class="caps"&gt;STM8&lt;/span&gt;
Discovery&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="STM8S105K4T6 photo |=| 50%%" src="https://chytrosti.marrek.cz/mit/img/STM8S105K4T6.jpg"/&gt;&lt;/p&gt;
&lt;h3 id="usb-to-uart-bridge"&gt;&lt;span class="caps"&gt;USB&lt;/span&gt; to &lt;span class="caps"&gt;UART&lt;/span&gt; Bridge&lt;a class="headerlink" href="#usb-to-uart-bridge" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Pokud plánujete projekt, kde μprocesor komunikuje s PCčkem, bude se vám hodit
&lt;a href="https://www.aliexpress.com/wholesale?SearchText=USB+TTL+UART+convertor"&gt;převodník &lt;span class="caps"&gt;USB&lt;/span&gt; &lt;span class="caps"&gt;TTL&lt;/span&gt;
&lt;span class="caps"&gt;UART&lt;/span&gt;&lt;/a&gt;.
Dá se běžně zakoupit i na českých e-shopech. Ještě je dobré upozornit, že ne
každý operační systém automaticky komunikuje s každým čipem, proto je dobré
věnovat pozornost tomu, jakým čipem, je osazen převodník, který hodláte
zakoupit a zda se váš &lt;span class="caps"&gt;OS&lt;/span&gt; s tímto čipem kamarádí.&lt;/p&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt;&lt;span class="caps"&gt;USB2UART&lt;/span&gt; bridge je součástí vývojové desky Nukleo-Kit&lt;/p&gt;
&lt;p&gt;Pokud používáte &lt;a href=""&gt;Nucleo-kit&lt;/a&gt; je tento převodní už jeho součástí.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img alt="USB to TTL UART photo |=| 50%%" src="https://chytrosti.marrek.cz/mit/img/USB2UART.jpg"/&gt;&lt;/p&gt;
&lt;h3 id="univerzalni-pcb"&gt;Univerzální &lt;span class="caps"&gt;PCB&lt;/span&gt;&lt;a class="headerlink" href="#univerzalni-pcb" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Na projektové prototypování můžete s výhodou využít &lt;a href="https://electronics.stackexchange.com/questions/55236/how-to-make-traces-on-an-universal-pcb"&gt;univerzální (prototypovou)
desku&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="30%%" src="https://chytrosti.marrek.cz/mit/img/pcb1.png"/&gt;
&lt;img alt="30%%" src="https://chytrosti.marrek.cz/mit/img/pcb2.png"/&gt;
&lt;img alt="30%%" src="https://chytrosti.marrek.cz/mit/img/pcb3.png"/&gt;
&lt;img alt="30%%" src="https://chytrosti.marrek.cz/mit/img/pcb4.png"/&gt;
&lt;img alt="30%%" src="https://chytrosti.marrek.cz/mit/img/pcb5.png"/&gt;
&lt;img alt="30%%" src="https://chytrosti.marrek.cz/mit/img/pcb6.png"/&gt;&lt;/p&gt;
&lt;p&gt;Existuje celá řada variant a vzorů (třeba 
&lt;a href="https://www.tme.eu/cz/katalog/univerzalni-plosne-spoje_100110/?s_field=1000014&amp;amp;s_order=asc&amp;amp;limit=40&amp;amp;currency=CZK&amp;amp;page=1"&gt;tu&lt;/a&gt;
nebo &lt;a href="https://www.aliexpress.com/wholesale?SearchText=universal+prototipe+PCB+board"&gt;tam&lt;/a&gt;)
universálních bastl-desek; zde bych rád upozornil na některé – pro nás zajímavé:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;řady po třech: 
  &lt;a href="https://www.tme.eu/cz/details/rad-790-1/univerzalni-plosne-spoje/rademacher/790-1/"&gt;1&lt;/a&gt;
&lt;a href="https://www.aliexpress.com/item/1005002838248764.html"&gt;2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;jen body:
  &lt;a href="https://www.tme.eu/cz/details/rad-811-6/univerzalni-plosne-spoje/rademacher/811-6/"&gt;1&lt;/a&gt;
&lt;a href="https://www.aliexpress.com/item/1005002838214518.html"&gt;2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;s rozvodem napájení:
  &lt;a href="https://www.tme.eu/cz/details/pc-12/univerzalni-plosne-spoje/sci/"&gt;1&lt;/a&gt;
&lt;a href="https://www.aliexpress.com/item/32947164794.html"&gt;2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;s roztečí Arduino shield:
  &lt;a href="https://www.tme.eu/cz/details/a000080/reseni-arduino/arduino/shield-mega-proto-pcb-rev3/"&gt;1&lt;/a&gt;
&lt;a href="https://www.aliexpress.com/wholesale?SearchText=arduino+prototipe+PCB+board"&gt;2&lt;/a&gt;
&lt;a href="https://www.aliexpress.com/item/32841354009.html"&gt;3&lt;/a&gt;
&lt;a href="https://www.aliexpress.com/item/32814326060.html?"&gt;4&lt;/a&gt;.
  Tuto desku můžete použít s Nucleo-kitem Nucleo-&lt;span class="caps"&gt;8S208RB&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="admonition tip"&gt;
&lt;p class="admonition-title"&gt;Dutinkové a kolíkové lišty&lt;/p&gt;
&lt;p&gt;K univerzálním deskám se vám budou hodit &lt;a href="https://www.tme.eu/cz/katalog/?search=ZL262&amp;amp;s_field=1000011&amp;amp;s_order=desc"&gt;dutinkové
lišty&lt;/a&gt;
a &lt;a href="https://www.tme.eu/cz/katalog/?search=ZL201&amp;amp;s_field=1000011&amp;amp;s_order=desc"&gt;pinové
řady&lt;/a&gt;,
(&lt;a href="https://www.tme.eu/cz/katalog/?search=ZL211&amp;amp;s_field=1000011&amp;amp;s_order=desc"&gt;také zde&lt;/a&gt;)
s jejichž pomocí můžete svou univerzální desku posadit na
&lt;a href="#nucleo-8s208rb"&gt;Nucleo-Kit&lt;/a&gt; nebo &lt;a href="#stm8s-discovery"&gt;&lt;span class="caps"&gt;STM8S&lt;/span&gt; Discovery&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id="dalsi-soucastky-a-hotove-moduly"&gt;Další součástky a hotové moduly&lt;a class="headerlink" href="#dalsi-soucastky-a-hotove-moduly" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Je ještě spousta dalších udělátek, které stojí za to zmínit. Omezím se jen na nákupní
seznamy. Je asi jasné, že mi nejde o konkrétní obchod, ale spíše o zboží, které
se jistě dá zakoupit i někde jinde.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.tme.eu/cz/parking/c9f279be1feb850079cc8bdf88943222467af88d.html"&gt;seznam na &lt;span class="caps"&gt;TME&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.laskakit.cz/oblibene/#4201a1230bd4c7afdbff365f68038a1d42723116"&gt;seznam na LaskKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.aliexpress.com/p/wishlist/shareReflux.html?groupId=dGW2uj4YNVGDbjN2VCLzOJhU39eDkEz4y9Z4CGz2UIM%3D"&gt;seznam na AliExpressu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="nekolik-napadu-pro-mensi-projekt"&gt;Několik nápadů pro menší projekt&lt;a class="headerlink" href="#nekolik-napadu-pro-mensi-projekt" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;h4 id="1-stopky"&gt;1. Stopky&lt;a class="headerlink" href="#1-stopky" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Start/stop&lt;/li&gt;
&lt;li&gt;mezičas (stisk zobrazí aktuální “čas kola” a stopky běží dál)&lt;/li&gt;
&lt;li&gt;měření na setiny sekundy  Tichý (alfanum-display)&lt;/li&gt;
&lt;li&gt;měření na milisekundy &lt;/li&gt;
&lt;li&gt;Potřeby: displej, tlačítka&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="2-stopky-s-optickou-branou"&gt;2. Stopky s optickou bránou&lt;a class="headerlink" href="#2-stopky-s-optickou-branou" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Optická brána se sestaví buď z laserové &lt;span class="caps"&gt;LED&lt;/span&gt; a fototranzistoru 
(velká vzdálenost, přesná pozice) nebo s pomocí &lt;span class="caps"&gt;IR&lt;/span&gt; &lt;span class="caps"&gt;LED&lt;/span&gt; a 
&lt;span class="caps"&gt;IR&lt;/span&gt; detektoru (menší přesnost pozice, větší odolnost světelnému pozadí)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start se provádí tlačítkem, stop se měří přerušením opt. brány&lt;/li&gt;
&lt;li&gt;Start i stop se realizuje dvojicí opt. bran (přerušení první brány spustí čas, 
  přerušení druhé brány zastaví čas) - čas pak lze měřit velmi přesně 
  (klidně i rychlost střely atp.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: displej, tlačítko, laserovou &lt;span class="caps"&gt;LED&lt;/span&gt; nebo &lt;span class="caps"&gt;IR&lt;/span&gt; &lt;span class="caps"&gt;LED&lt;/span&gt;, fototranzistor(y) nebo &lt;span class="caps"&gt;IR&lt;/span&gt; detektory&lt;/p&gt;
&lt;h4 id="3-minutky"&gt;3. “Minutky”&lt;a class="headerlink" href="#3-minutky" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;s nastavením minut (1 až 180)&lt;/li&gt;
&lt;li&gt;akustický signál po skončení 2&lt;/li&gt;
&lt;li&gt;blikání po skončení&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;potřeby: displej, enkodér nebo tlačítka, reproduktor/buzzer&lt;/p&gt;
&lt;h4 id="4-teplomer"&gt;4. Teploměr&lt;a class="headerlink" href="#4-teplomer" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;dva senzory (vnitřní/vnější)&lt;/li&gt;
&lt;li&gt;paměť maxima minima&lt;/li&gt;
&lt;li&gt;zobrazování trendu (teplota roste/klesá/stagnuje)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;potřeby: displej, teplotní senzory, příp. tlačítka&lt;/p&gt;
&lt;h4 id="4-termostat-1"&gt;4. Termostat 1&lt;a class="headerlink" href="#4-termostat-1" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;digitálně nastavitelná “referenční teplota”&lt;/li&gt;
&lt;li&gt;digitálně nastavitelná hystereze&lt;/li&gt;
&lt;li&gt;digitálně nastavitelný “čas zpoždění” (jak dlouho musí být překročena teplota aby termostat sepnul)&lt;/li&gt;
&lt;li&gt;digitálně volitelná polarita výstupu&lt;/li&gt;
&lt;li&gt;volitelný spínaný výstup (Open Drain, Relé, H-můstek)&lt;/li&gt;
&lt;li&gt;akustická signalizace překročení/podkročení (i vícestupňová)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: displej, tlačítka, teplotní senzory, příp. Relé, příp.integrovaný H-můstek, příp.tranzistory (&lt;span class="caps"&gt;MOSFET&lt;/span&gt;)&lt;/p&gt;
&lt;h4 id="5-termoregulator"&gt;5. Termoregulátor&lt;a class="headerlink" href="#5-termoregulator" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Otáčky ventilátoru řízené teplotou&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;digitální nastavení teploty pro 0% otáčky a pro 100% otáčky&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: ventilátor, teplotní čidla, displej, tlačítka/enkodér&lt;/p&gt;
&lt;h4 id="6-teplotni-logger"&gt;6. Teplotní logger&lt;a class="headerlink" href="#6-teplotni-logger" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Zaznamenává teplotu v daném intervalu (např 1 minuta) a ukládá do (externí) eeprom/flash paměti. Na výzvu po UARTu odešle teploty do &lt;span class="caps"&gt;PC&lt;/span&gt; k vykreslení grafu.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;volitelná frekvence měření&lt;/li&gt;
&lt;li&gt;volitelný počet záznamů (např. 1 den atp.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: Baterie, teplotní čidla, externí paměť, &lt;span class="caps"&gt;USB&lt;/span&gt;/&lt;span class="caps"&gt;UART&lt;/span&gt; převodník a stabilizátor napětí pokud je to realizováno mimo vývojový kit&lt;/p&gt;
&lt;h4 id="7-casovy-spinac"&gt;7. časový spínač&lt;a class="headerlink" href="#7-casovy-spinac" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Stiskem tlačítka se spustí a drží aktivovaný výstup (světlo, motor, atp.) po zvolenou dobu&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dobu volit potenciometrem&lt;/li&gt;
&lt;li&gt;dobu volit přepínačem&lt;/li&gt;
&lt;li&gt;dobu volit digitálně&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: Tlačítka, spínaný prvek (&lt;span class="caps"&gt;LED&lt;/span&gt;, motor atp.), příp potenciometr/přepínač, příp. displej&lt;/p&gt;
&lt;h4 id="8-zvonek-s-melodii"&gt;8. Zvonek s melodií&lt;a class="headerlink" href="#8-zvonek-s-melodii" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;po stisku zahraje předem danou melodii&lt;/li&gt;
&lt;li&gt;v případě nízkého napětí (bateriové napájení) hraje při stisku jinou melodii (dává na vědomí potřebu vyměnit baterie)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: piezorepro&lt;/p&gt;
&lt;h4 id="9-klavesovy-hudebni-nastroj"&gt;9. Klávesový hudební nástroj&lt;a class="headerlink" href="#9-klavesovy-hudebni-nastroj" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;budí piezoreproduktor obdélníkovým signálem přímo z &lt;span class="caps"&gt;MCU&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;výstupy &lt;span class="caps"&gt;MCU&lt;/span&gt; jsou posíleny tranzistory (hlasitější výstup)&lt;/li&gt;
&lt;li&gt;generuje čisté harmonické tóny (sinus)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: piezoreproduktor / reproduktor, příp. integrovaný obvod zesilovače, příp. &lt;span class="caps"&gt;DA&lt;/span&gt; převodník&lt;/p&gt;
&lt;h4 id="10-meteostanice"&gt;10. Meteostanice&lt;a class="headerlink" href="#10-meteostanice" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;zobrazuje teplotu vnitřní, vnější a případné extrémy (minimum, maximum)&lt;/li&gt;
&lt;li&gt;zobrazuje tlak a tlakovou tendenci&lt;/li&gt;
&lt;li&gt;zobrazuje vlhkost vzduchu&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: displej, senzory teploty, příp. tlaku, příp.vlhkosti&lt;/p&gt;
&lt;h4 id="11-model-krizovatky"&gt;11. Model křižovatky&lt;a class="headerlink" href="#11-model-krizovatky" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;řídí plnohodnotně křižovatku typu X, včetně oranžové barvy a přechodů pro chodce&lt;/li&gt;
&lt;li&gt;umí reagovat na tlačítka na přechodech pro chodce&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: 8x Zelená, 8x červená, 4x žlutá &lt;span class="caps"&gt;LED&lt;/span&gt;, tlačítka&lt;/p&gt;
&lt;h4 id="12-pocitadlo-pruchodu"&gt;12. Počítadlo průchodů&lt;a class="headerlink" href="#12-pocitadlo-pruchodu" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;počítá kolik lidí prošlo dovnitř a ven:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pomocí dvojice laserových optozávor&lt;/li&gt;
&lt;li&gt;pomocí dvojice optických &lt;span class="caps"&gt;IR&lt;/span&gt; bran&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: displej, tlačítko, Laserové &lt;span class="caps"&gt;LED&lt;/span&gt; a fototranzistory nebo &lt;span class="caps"&gt;IR&lt;/span&gt; &lt;span class="caps"&gt;LED&lt;/span&gt; a &lt;span class="caps"&gt;IR&lt;/span&gt; detektory&lt;/p&gt;
&lt;h4 id="13-pocitadlo-motohodin"&gt;13. Počítadlo “motohodin”&lt;a class="headerlink" href="#13-pocitadlo-motohodin" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;počítá (po sekundách) úhrnný provoz zařízení a zobrazuje ho (v hodinách,
minutách a přip. sekundách provozu). Pamatuje si stav i po vypnutí a po zapnutí
naváže. Resetuje počet pomocí tlačítka.&lt;/p&gt;
&lt;p&gt;Potřeby: Displej, tlačítko&lt;/p&gt;
&lt;h4 id="14-teplomer-logger-s-grafickym-displejem-a-historii"&gt;14. Teploměr logger s grafickým displejem a historií.&lt;a class="headerlink" href="#14-teplomer-logger-s-grafickym-displejem-a-historii" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Ukazuje na grafickém displeji aktuální teplotu a zároveň vývoj teplot za posledních 24 hodin.&lt;/p&gt;
&lt;p&gt;Potřeby: Grafický displej, teplotní čidlo&lt;/p&gt;
&lt;h4 id="15-stroboskop"&gt;15. Stroboskop&lt;a class="headerlink" href="#15-stroboskop" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;bliká s volitelnou frekvencí a volitelnou šířkou pulzu (obě zobrazuje na displeji)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Výstup na výkonovou &lt;span class="caps"&gt;LED&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;nastavení frekvence i šířky pulzu potenciometrem&lt;/li&gt;
&lt;li&gt;digitální nastavení frekvence i šířky  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: Displej, &lt;span class="caps"&gt;LED&lt;/span&gt;, příp. potenciometry/tlačítka/enkodér&lt;/p&gt;
&lt;h4 id="16-soumrakovy-spinac"&gt;16. soumrakový spínač&lt;a class="headerlink" href="#16-soumrakovy-spinac" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;digitálně nastavitelná intenzita osvětlení pro sepnutí a rozepenutí&lt;/li&gt;
&lt;li&gt;automatické přepínání zisku při měření intenzity (velký rozsah)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: Fotorezistor, operační zesilovač, příp.displej&lt;/p&gt;
&lt;h4 id="17-coulomb-counter"&gt;17. Coulomb counter&lt;a class="headerlink" href="#17-coulomb-counter" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Měří úhrnou spotřebu elektrické energie ze stejnosměrného napájení a zobrazuje na displeji vyčerpanou kapacitu (Ah)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zobrazuje i vyčerpaný výkon (Wh)&lt;/li&gt;
&lt;li&gt;Ukazuje i napětí zdroje energie (výhodné pokud je zdrojem baterie)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: Displej, operační zesilovač, bočník&lt;/p&gt;
&lt;h4 id="18-solarni-system-solarni-baterie"&gt;18. Solární systém (“Solární baterie”)&lt;a class="headerlink" href="#18-solarni-system-solarni-baterie" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;hlídat napětí baterie a zapínat a vypínat nabíjení ze solárního panelu&lt;/li&gt;
&lt;li&gt;hlídat podpětí baterie a odpojovat zátěž&lt;/li&gt;
&lt;li&gt;případně indikovat stav baterie&lt;/li&gt;
&lt;li&gt;Lze sestavit pro olověné nebo lithiové akumulátory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: akumulátor, solární panel, drobná elektronika, příp. displej&lt;/p&gt;
&lt;h4 id="19-rizeni-otacek-3-dratoveho-nebo-4-dratoveho-ventilatoru"&gt;19. řízení otáček 3-drátového nebo 4-drátového ventilátoru&lt;a class="headerlink" href="#19-rizeni-otacek-3-dratoveho-nebo-4-dratoveho-ventilatoru" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;pomocí enkodéru / tlačítek&lt;/li&gt;
&lt;li&gt;zobrazovat otáčky na displej&lt;/li&gt;
&lt;li&gt;možnost řídit otáčky teplotou&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: ventilátor, displej, tlačítka/enkodér, případně teplotní senzor&lt;/p&gt;
&lt;h4 id="20-tester-aa-a-aaa-baterii"&gt;20. Tester &lt;span class="caps"&gt;AA&lt;/span&gt; a &lt;span class="caps"&gt;AAA&lt;/span&gt; baterií&lt;a class="headerlink" href="#20-tester-aa-a-aaa-baterii" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Po vložení baterie do přípravku změří napětí a vnitřní odpor a vyhodnotí stav/kvalitu baterie&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;možnost přidat automatickou změnu “polarity” (baterii lze vložit i opačně)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;potřeby: Displej, drobná elektronika&lt;/p&gt;
&lt;h4 id="21-digitalni-interkom"&gt;21. Digitální interkom&lt;a class="headerlink" href="#21-digitalni-interkom" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Mikrokontrolér digitalizuje zvuk, odešle ho pomocí UARTu skrze &lt;span class="caps"&gt;UTP&lt;/span&gt; kabel k
dalšímu mikrokontroléru, který signál převede zpět na akustický&lt;/p&gt;
&lt;p&gt;Výzva :)
Potřeby:
Dva mikrokontroléry, &lt;span class="caps"&gt;DA&lt;/span&gt; převodník, další drobná elektronika&lt;/p&gt;
&lt;h4 id="22-sun-tracking-solarni-nabijecka"&gt;22. “Sun tracking” solární nabíječka&lt;a class="headerlink" href="#22-sun-tracking-solarni-nabijecka" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Solární panel umístěný na servomotorku, mikrokontrolér snímá polohu slunce na
obloze a natáčí panel tak aby zachytával maximální množství energie a nabíjí
tím baterii&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hlídání stavu baterie (ukončuje nabíjení když je akumulátor plně nabitý, odpojuje zátěž když je kompletně vybitý)&lt;/li&gt;
&lt;li&gt;indikace stavu baterie&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: Akumulátor, solární panel, servomotorek, příp.krokový motorek, mechanika&lt;/p&gt;
&lt;h4 id="23-testermeric-kapacity-olovenych-akumulatoru"&gt;23. Tester/měřič kapacity olověných akumulátorů&lt;a class="headerlink" href="#23-testermeric-kapacity-olovenych-akumulatoru" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Zařízení nabije akumulátor, poté ho vybije zvoleným proudem a změří a zobrazí
celkovou kapacitu (a pak akumulátor zpět nabije).&lt;/p&gt;
&lt;p&gt;Výzva :)&lt;/p&gt;
&lt;p&gt;Potřeby: napájecí adaptér, displej, mikrokontrolér, další analogová elektronika&lt;/p&gt;
&lt;h4 id="24-osvetleni-ovladane-dalkovym-ovladacem-skrze-ir"&gt;24. Osvětlení ovládané dálkovým ovladačem (skrze &lt;span class="caps"&gt;IR&lt;/span&gt;)&lt;a class="headerlink" href="#24-osvetleni-ovladane-dalkovym-ovladacem-skrze-ir" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;ON&lt;/span&gt;/&lt;span class="caps"&gt;OFF&lt;/span&gt; funkce&lt;/li&gt;
&lt;li&gt;Regulace jasu&lt;/li&gt;
&lt;li&gt;U &lt;span class="caps"&gt;RGB&lt;/span&gt; světel i regulace barvy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: &lt;span class="caps"&gt;IR&lt;/span&gt; &lt;span class="caps"&gt;LED&lt;/span&gt;, &lt;span class="caps"&gt;IR&lt;/span&gt; přijímač, &lt;span class="caps"&gt;LED&lt;/span&gt;, drobná elektronika&lt;/p&gt;
&lt;h4 id="25-propipavak-tester-kontinuity-jako-je-na-multimetrech"&gt;25. “propípávák” - tester kontinuity (jako je na multimetrech)&lt;a class="headerlink" href="#25-propipavak-tester-kontinuity-jako-je-na-multimetrech" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Potřeby: Buzzer/Reproduktor&lt;/p&gt;
&lt;h4 id="26-logicka-sonda"&gt;26. Logická sonda&lt;a class="headerlink" href="#26-logicka-sonda" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Testuje úroveň napětí (rozpoznává úrovně H a L) s akustickou signalizací&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lze zabudovat do těla fixy (ergonomické ovládání)&lt;/li&gt;
&lt;li&gt;lze signalizovat různé úrovně (5V, 3.3V) různým tónem&lt;/li&gt;
&lt;li&gt;lze zabudovat test polarity&lt;/li&gt;
&lt;li&gt;lze vyrobit napájené akumulátorem&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: buzzer, drobná elektronika&lt;/p&gt;
&lt;h4 id="27-generator-obdelnikoveho-prubehu"&gt;27. Generátor obdélníkového průběhu&lt;a class="headerlink" href="#27-generator-obdelnikoveho-prubehu" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Frekvence až do 160MHz&lt;/li&gt;
&lt;li&gt;Lze vybavit volbou výstupního napětí&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Výzva :)&lt;/p&gt;
&lt;h4 id="28-generator-sinustrojuhelnikobdelnikpwm"&gt;28. Generátor sinus/trojúhelník/obdélník/&lt;span class="caps"&gt;PWM&lt;/span&gt;&lt;a class="headerlink" href="#28-generator-sinustrojuhelnikobdelnikpwm" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Frekvence až 25MHz&lt;/li&gt;
&lt;li&gt;lze vybavit regulací výstupního napětí&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Výzva :)&lt;/p&gt;
&lt;h4 id="29-fm-radio"&gt;29. &lt;span class="caps"&gt;FM&lt;/span&gt; rádio&lt;a class="headerlink" href="#29-fm-radio" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;automatické vyhledávání stanic&lt;/li&gt;
&lt;li&gt;digitální nastavení hlasitosti&lt;/li&gt;
&lt;li&gt;Příjem &lt;span class="caps"&gt;RDS&lt;/span&gt; (textových informací jako jméno skladby atp.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potřeby: Displej, reproduktor, modul rádia, tlačítka/enkodér&lt;/p&gt;
&lt;h4 id="30-hodiny-s-obvodem-rtc"&gt;30. Hodiny s obvodem &lt;span class="caps"&gt;RTC&lt;/span&gt;&lt;a class="headerlink" href="#30-hodiny-s-obvodem-rtc" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;s budíkem&lt;/li&gt;
&lt;li&gt;s rádiem - radiobudík&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;potřeby: Displej, tlačítka&lt;/p&gt;
&lt;h4 id="31-panelovy-merak-k-napajecimu-zdroji"&gt;31. Panelový měřák k napájecímu zdroji&lt;a class="headerlink" href="#31-panelovy-merak-k-napajecimu-zdroji" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Měří a ukazuje na displeji, napětí, proud a výkon. Lze realizovat společně s napájecím zdrojem.&lt;/p&gt;
&lt;p&gt;Potřeby: Displej, různá drobná analogová elektronika&lt;/p&gt;
&lt;h4 id="32-mereni-vzdalenosti"&gt;32. Měření vzdálenosti&lt;a class="headerlink" href="#32-mereni-vzdalenosti" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Ultrasonic + &lt;span class="caps"&gt;LCD&lt;/span&gt; display&lt;/p&gt;
&lt;h2 id="nekolik-napadu-pro-vetsi-projekt"&gt;Několik nápadů pro větší projekt&lt;a class="headerlink" href="#nekolik-napadu-pro-vetsi-projekt" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;h4 id="1-regulator-nabijeni-akumulatoru-pro-solarni-panel"&gt;1. Regulátor nabíjení akumulátoru pro solární panel&lt;a class="headerlink" href="#1-regulator-nabijeni-akumulatoru-pro-solarni-panel" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;automatické odpojování zátěže při podpětí&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;optimalizace na nízkou spotřebu&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;možnost měřit a zobrazovat nabíjecí proud&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;možnost měřit a zobrazovat vybíjecí proud&lt;/li&gt;
&lt;li&gt;možnost automatického spínání podle denní doby (ráno, večer)&lt;/li&gt;
&lt;li&gt;možnost automatického spínání zátěže podle nastaveného času (&lt;span class="caps"&gt;RTC&lt;/span&gt;) &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="2-fm-radio"&gt;2.  &lt;span class="caps"&gt;FM&lt;/span&gt; Rádio&lt;a class="headerlink" href="#2-fm-radio" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;nastavení frekvence&lt;/li&gt;
&lt;li&gt;nastavení hlasitosti&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;paměť stanic&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;automatické vyhledávání&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;zobrazování &lt;span class="caps"&gt;RDS&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;chod z baterií nebo akumulátoru    &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="3-hodiny-s-budikem"&gt;3. Hodiny s budíkem&lt;a class="headerlink" href="#3-hodiny-s-budikem" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;přesný čas odvozený od &lt;span class="caps"&gt;RTC&lt;/span&gt; (&lt;span class="caps"&gt;DS3231&lt;/span&gt; ?)&lt;/li&gt;
&lt;li&gt;zálohování času z baterie&lt;/li&gt;
&lt;li&gt;možnost nastavení času&lt;/li&gt;
&lt;li&gt;možnost nastavení budíku&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;napájení adaptérem z 230V&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;automatické nastavení jasu podle okolního osvětlení (“noční režim”)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="4-ohmmetr"&gt;4. Ohmmetr&lt;a class="headerlink" href="#4-ohmmetr" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;rozsah 10R až 10MOhm&lt;/li&gt;
&lt;li&gt;automatická volba rozsahu&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;napájení z baterií nebo akumulátoru&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;přiřazování do řad E12 a E24&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;zobrazení odchylky od nejbližší hodnoty z řady&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="5-tester-baterii"&gt;5. Tester baterií&lt;a class="headerlink" href="#5-tester-baterii" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;měření napětí&lt;/li&gt;
&lt;li&gt;měření “vnitřního odporu”&lt;/li&gt;
&lt;li&gt;akustická nebo optická signalizace dobrá/špatná  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="6-laboratorni-teplomer-s-usb-vystupem-do-pc"&gt;6. “Laboratorní” teploměr s &lt;span class="caps"&gt;USB&lt;/span&gt; výstupem do &lt;span class="caps"&gt;PC&lt;/span&gt;&lt;a class="headerlink" href="#6-laboratorni-teplomer-s-usb-vystupem-do-pc" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;měřit teplotu ze dvou čidel&lt;/li&gt;
&lt;li&gt;volitelná frekvencě měření&lt;/li&gt;
&lt;li&gt;tlačítko “start / stop” spouštějící a ukončující měření&lt;/li&gt;
&lt;li&gt;odesílat teploty v čitelném formátu do &lt;span class="caps"&gt;PC&lt;/span&gt; (přes &lt;span class="caps"&gt;USB&lt;/span&gt; &lt;span class="caps"&gt;VCP&lt;/span&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="7-domaci-teplomer"&gt;7) “Domácí” teploměr&lt;a class="headerlink" href="#7-domaci-teplomer" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;měřit teplotu dvou čidel (vnější vnitřní)&lt;/li&gt;
&lt;li&gt;zobrazovat na displeji (textový &lt;span class="caps"&gt;LCD&lt;/span&gt;, numerický &lt;span class="caps"&gt;LCD&lt;/span&gt;, segmenty, grafický &lt;span class="caps"&gt;LCD&lt;/span&gt;, grafický &lt;span class="caps"&gt;TFT&lt;/span&gt;, &lt;span class="caps"&gt;OLED&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;napájení z adaptéru (230V)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;zobrazovat maxima, minima&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;zobrazovat trend (tempo růstu, poklesu)&lt;/li&gt;
&lt;li&gt;vykreslovat “křivku” vývoje teploty za posledních 24/48h&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="8-dalkovy-ovladac-ir"&gt;8. dálkový ovladač (&lt;span class="caps"&gt;IR&lt;/span&gt;)&lt;a class="headerlink" href="#8-dalkovy-ovladac-ir" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;obyč. dálkovým ovladačem (třeba k &lt;span class="caps"&gt;TV&lt;/span&gt;) zapínat a vypínat (ovládat) 
  světlo nebo jakoukoli jinou zátěž&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="9-kanadsky-zertik-s-ir-vysilacem"&gt;9. Kanadský žertík s &lt;span class="caps"&gt;IR&lt;/span&gt; vysílačem&lt;a class="headerlink" href="#9-kanadsky-zertik-s-ir-vysilacem" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;automaticky po zhasnutí nebo setmění pošle příkaz pro zapnutí &lt;span class="caps"&gt;TV&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;automaticky v pravidelných intervalech přepne &lt;span class="caps"&gt;TV&lt;/span&gt; na zvolený (nebo náhodný) program&lt;/li&gt;
&lt;li&gt;automaticky v pravidelných intervalech snižuje hlasitost &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;miniaturizovaná zařízení napájené z malé baterie (&lt;span class="caps"&gt;CR2032&lt;/span&gt;) - aby ho bylo možné skrýt&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;optimalizovat spotřebu, aby vydrželo co nejdéle&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="10-opticka-brana"&gt;10. Optická brána&lt;a class="headerlink" href="#10-opticka-brana" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;dvojice senzorů schopná snímat směr průchodu&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;senzory buďto &lt;span class="caps"&gt;IR&lt;/span&gt; nebo lasery (obě s clonkou)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;schopnost rozeznat “anomálie” (více osob procházejícíh zároveň atp.) &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="11-termostat"&gt;11. Termostat&lt;a class="headerlink" href="#11-termostat" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;jeden nebo více senzorů (průměrování nebo maximum/minimum)&lt;/li&gt;
&lt;li&gt;nastavitelná teplota zapnutí a vypnutí (případně setpoint a hystereze)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;zobrazování teploty&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;možnost krádodkobé činnosti z baterie/akumulátoru&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;schopnost snímat teplotu z více druhů čidel&lt;/li&gt;
&lt;li&gt;schopnost automaticky rozpoznat připojená čidla &lt;/li&gt;
&lt;li&gt;schopnost ruční kalibrace (dvoubodové)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="12-meteostanice"&gt;12. meteostanice&lt;a class="headerlink" href="#12-meteostanice" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;snímání dvou teplot (venku, uvnitř)&lt;/li&gt;
&lt;li&gt;kombinované napájení adaptér + baterie/akumulátor&lt;/li&gt;
&lt;li&gt;měření atmosférického tlaku&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;zobrazování na &lt;span class="caps"&gt;LCD&lt;/span&gt; (alfanumerickém nebo i grafickém)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;měření &lt;span class="caps"&gt;UV&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;měření slunečního svitu (denní úhrn)&lt;/li&gt;
&lt;li&gt;měření vlhkosti (interier)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="13-jakakoli-forma-dalkove-ovladaneho-auticka-ci-jineho-stroje"&gt;13. Jakákoli forma dálkově ovládaného “autíčka” či jiného stroje&lt;a class="headerlink" href="#13-jakakoli-forma-dalkove-ovladaneho-auticka-ci-jineho-stroje" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ovládání ideálně modelářským vysílačem (nutno obstarat)&lt;/li&gt;
&lt;li&gt;mechanika libovolná, merkur, lego, stavebnice&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;napájení akumulátory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;možnost řešit bezdrátovými moduly namísto “modelářského” ovladače, ale nutno obstarat &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="14-bezdratova-komunikace-s-nrf24"&gt;14. bezdrátová komunikace s &lt;span class="caps"&gt;NRF24&lt;/span&gt;&lt;a class="headerlink" href="#14-bezdratova-komunikace-s-nrf24" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;(nejlevnější datový bezdrátový modul)&lt;/li&gt;
&lt;li&gt;posílání libovolných zpráv (senzory, textové zprávy atp.)&lt;/li&gt;
&lt;/ul&gt;</content><category term="MITka"></category><category term="Céčko"></category><category term="programování"></category><category term="projekt"></category><category term="bastl"></category></entry><entry><title>Vývoj STM8 s OpenSource nástroji</title><link href="https://chytrosti.marrek.cz/stm8oss.html" rel="alternate"></link><published>2024-01-24T20:31:40+01:00</published><updated>2024-01-24T20:31:40+01:00</updated><author><name>Marrek Nožka</name></author><id>tag:chytrosti.marrek.cz,2024-01-24:/stm8oss.html</id><summary type="html">
&lt;p&gt;Vývojové nástroje jsou asi největší slabinou celého ekosystému &lt;span class="caps"&gt;STM8&lt;/span&gt;. Výrobce
dodává vývojové prostředí &lt;span class="caps"&gt;STVD&lt;/span&gt; 
(&lt;a href="http://elektromys.eu/clanky/stm8_2_stvd/clanek.html"&gt;návod zde&lt;/a&gt;),
které je sice dostačující, ale staré a již nevyvíjené. Navíc se občas stane, že
na nějakém &lt;span class="caps"&gt;PC&lt;/span&gt; je problém to rozjet. Kompilátor Cosmic sice funguje, ale ta neustálá
kontrola licence, je fakt opruz; … a …&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Vývojové nástroje jsou asi největší slabinou celého ekosystému &lt;span class="caps"&gt;STM8&lt;/span&gt;. Výrobce
dodává vývojové prostředí &lt;span class="caps"&gt;STVD&lt;/span&gt; 
(&lt;a href="http://elektromys.eu/clanky/stm8_2_stvd/clanek.html"&gt;návod zde&lt;/a&gt;),
které je sice dostačující, ale staré a již nevyvíjené. Navíc se občas stane, že
na nějakém &lt;span class="caps"&gt;PC&lt;/span&gt; je problém to rozjet. Kompilátor Cosmic sice funguje, ale ta neustálá
kontrola licence, je fakt opruz; … a jeho chybová hlášení mi taky
nepřišla úplně srozumitelná.  &lt;br/&gt;
A to jsem ještě nezmínil to hlavní: &lt;strong&gt;Na Linuxu to nejede!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="tools %%" src="https://chytrosti.marrek.cz/mit/img/tools.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;Takže, co s tím? Použijeme
&lt;a href="https://cs.wikipedia.org/wiki/Otev%C5%99en%C3%BD_software"&gt;OpenSource&lt;/a&gt;
nástroje! Co je potřeba?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Vývojové prostředí&lt;/li&gt;
&lt;li&gt;Kompilátor&lt;/li&gt;
&lt;li&gt;Programátor/Flasher – software, kterým program do čipu nahraju&lt;/li&gt;
&lt;li&gt;Debuger&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Když jsem to celé tvořil hodně mi pomohla tato stránka, tak se tam můžete
mrknout: &lt;a href="https://github.com/hbendalibraham/stm8_started"&gt;https://github.com/hbendalibraham/stm8_started&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="predpripravena-instalace"&gt;Předpřipravená instalace&lt;a class="headerlink" href="#predpripravena-instalace" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Připravil jsem pro vás výukovou image systému &lt;a href="https://devuan.org/"&gt;Devuan Linux&lt;/a&gt;,
kde je vše již nastaveno a nainstalováno. Nemusíte tedy vše ručně instalovat, stačí 
nainstalovat &lt;a href="https://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt; – včetně 
&lt;a href="https://www.virtualbox.org/wiki/Downloads"&gt;Extension Pack&lt;/a&gt;
a stáhnout si image:
&lt;a href="https://mamut.spseol.cz/nozka/public/virtual-img-ova/Devuan-X+MIT.ova"&gt;Devuan-X-&lt;span class="caps"&gt;MIT&lt;/span&gt;.ova&lt;/a&gt;.
I tak si ale přečtěte následující text ať víte, jak to máte použít.&lt;/p&gt;
&lt;p class="center"&gt;&lt;a href="https://mamut.spseol.cz/nozka/public/virtual-img-ova/Devuan-X+MIT.ova"&gt;https://mamut.spseol.cz/nozka/public/virtual-img-ova/Devuan-X+&lt;span class="caps"&gt;MIT&lt;/span&gt;.ova&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="rychla-instalace"&gt;Rychlá instalace&lt;a class="headerlink" href="#rychla-instalace" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Dále v textu jsou popsány detaily. Zde je na jednom místě sepsána rychlá instalace
nástrojů, které budete potřebovat.&lt;/p&gt;
&lt;h3 id="windows"&gt;Windows&lt;a class="headerlink" href="#windows" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Nejprve nainstalujte &lt;a href="https://chytrosti.marrek.cz/chocolatey.html"&gt;Chocolatye&lt;/a&gt;. Tedy:&lt;/p&gt;
&lt;p&gt;Pomocí &lt;code&gt;Win+X&lt;/code&gt; a spustíte PowerShell jako Administrátor
a zadáte příkaz:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ExecutionPolicy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Bypass&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Scope&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Force&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServicePointManager&lt;/span&gt;&lt;span class="p"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;SecurityProtocol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServicePointManager&lt;/span&gt;&lt;span class="p"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;SecurityProtocol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3072&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;iex&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;New&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb nb-Type"&gt;Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebClient&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DownloadString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'https://community.chocolatey.org/install.ps1'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Potom doinstalujte další potřebné nástroje:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;choco install vscodium git make mingw openocd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pokud ještě nemáte Python, můžete i Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;choco install python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Instalace &lt;span class="caps"&gt;SDCC&lt;/span&gt; se musí naklikat. Instalátor stáhnete zde:
&lt;a href="https://sourceforge.net/projects/sdcc/files/sdcc-win64/"&gt;https://sourceforge.net/projects/sdcc/files/sdcc-win64/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pro flashování se na Windows používá
&lt;a href="https://www.st.com/en/development-tools/stvp-stm8.html"&gt;&lt;span class="caps"&gt;STVP&lt;/span&gt;&lt;/a&gt;. Pokud už jste
nainstalovali &lt;a href="https://www.st.com/en/development-tools/stvd-stm8.html"&gt;&lt;span class="caps"&gt;STVD&lt;/span&gt;&lt;/a&gt;
máte už &lt;span class="caps"&gt;STVP&lt;/span&gt; nainstalováno, protože je součástí jeho instalace. Je možné ho
naistalovat i zvlášť – bez &lt;span class="caps"&gt;STVD&lt;/span&gt;.&lt;/p&gt;
&lt;h3 id="linux"&gt;Linux&lt;a class="headerlink" href="#linux" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install sdcc sdcc-libraries git make openocd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="toolchain"&gt;Toolchain&lt;a class="headerlink" href="#toolchain" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Připravil jsem startovací &lt;em&gt;strom zdrojových kódů&lt;/em&gt; a 
&lt;a href="https://cs.wikipedia.org/wiki/Make"&gt;Makefile&lt;/a&gt;.&lt;/p&gt;
&lt;p class="center"&gt;&lt;a href="https://gitlab.com/spseol/mit-no/STM8S-toolchain"&gt;https://gitlab.com/spseol/mit-no/&lt;span class="caps"&gt;STM8S&lt;/span&gt;-toolchain&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tento toolchain se dá použít jak v Linuxu tak ve Windows. Stačí nainstalovat 
&lt;a href="https://cs.wikipedia.org/wiki/Make"&gt;Make&lt;/a&gt;,
&lt;a href="https://cs.wikipedia.org/wiki/Bash"&gt;Bash&lt;/a&gt; a/také &lt;a href="https://chytrosti.marrek.cz/git.html"&gt;Git&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id="instalace"&gt;Instalace&lt;a class="headerlink" href="#instalace" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;V Linuxu zavoláte něco jako:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apt install make git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ve Windows je nejsnadnější instalovat pomocí &lt;a href="https://chytrosti.marrek.cz/chocolatey.html"&gt;Chocolatye&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;choco install make git 
choco install openocd
choco install python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bash je součásti balíčku Git. Ve Windows ještě stojí za to malinko si Bash připravit,
aby fungoval dobře s &lt;code&gt;make&lt;/code&gt;. Proto si si nakopírujte konfiguraci s &lt;code&gt;.make/bashrc&lt;/code&gt; do
domovského adresáře.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cp .make/bashrc ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jak bylo &lt;a href="#rychla-instalace"&gt;popsáno výše&lt;/a&gt; je třeba nainstalovat i
&lt;a href="sdcc.sf.net"&gt;&lt;span class="caps"&gt;SDCC&lt;/span&gt;&lt;/a&gt; a &lt;a href="https://www.st.com/en/development-tools/stvp-stm8.html"&gt;&lt;span class="caps"&gt;STVP&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id="projekty-a-knihovna-spl"&gt;Projekty a knihovna &lt;span class="caps"&gt;SPL&lt;/span&gt;&lt;a class="headerlink" href="#projekty-a-knihovna-spl" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Adresářová struktura jednotlivých projektů vypadá takto:&lt;/p&gt;
&lt;pre&gt;
MIT
├── &lt;strong&gt;Projekt-1&lt;/strong&gt;
│   ├── inc
│   ├── lib
│   └── src
├── &lt;strong&gt;Projekt-blikblik&lt;/strong&gt;
│   ├── inc
│   ├── lib
│   └── src
├── &lt;strong&gt;SPL&lt;/strong&gt;
│   ├── inc
│   └── src
└── &lt;strong&gt;SPLSPL&lt;/strong&gt;
    ├── inc
    └── src
&lt;/pre&gt;
&lt;p&gt;Udělejte si adresář, kde budou všechny vaše projekty – v uvedeném příkladu je
to &lt;code&gt;MIT&lt;/code&gt;. V tom stejném adresáři budou i adresáře nazvané &lt;code&gt;SPL&lt;/code&gt; a &lt;code&gt;SPLSPL&lt;/code&gt;. V
&lt;code&gt;SPL&lt;/code&gt; adresářích je &lt;em&gt;Standard peripheral library&lt;/em&gt; od firmy
&lt;a href="https://st.com/"&gt;&lt;span class="caps"&gt;ST&lt;/span&gt;&lt;/a&gt;. Tato knihovna má dost divnou licenci a proto vám ji
nemůžu jen tak dát. &lt;em&gt;Měli byste&lt;/em&gt; si ji
&lt;a href="https://duckduckgo.com/?q=stm8S+Standard+peripheral+library&amp;amp;t=vivaldi&amp;amp;ia=software"&gt;najít&lt;/a&gt;
a &lt;a href="https://www.st.com/en/embedded-software/stsw-stm8069.html"&gt;stáhnout&lt;/a&gt;. Pak je
třeba ještě aplikovat &lt;a href="https://github.com/gicking/STM8-SPL_SDCC_patch"&gt;patch&lt;/a&gt;,
který knihovnu předělá tak, aby se dala použít s naším &lt;em&gt;&lt;span class="caps"&gt;SDCC&lt;/span&gt;&lt;/em&gt; kompilátorem.
Celé je to docela pracné, … ale zkuste napsat &lt;code&gt;make spl&lt;/code&gt; třeba se to zařídí samo.&lt;/p&gt;
&lt;h4 id="pouziti"&gt;Použití&lt;a class="headerlink" href="#pouziti" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;make spl&lt;/code&gt; – stáhne a nachystá knihovny&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt; – provede kompilaci&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make flash&lt;/code&gt; – nahraje program do chipu&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make clean&lt;/code&gt; – smaže všechno, co nakompiloval&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make rebuild&lt;/code&gt; – smaže vše a znovu zkompiluje&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make openocd&lt;/code&gt; – spustí &lt;code&gt;openocd&lt;/code&gt; pro debug&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make debug&lt;/code&gt; – spustí &lt;span class="caps"&gt;STM8&lt;/span&gt;-gdb&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="konkurence"&gt;Konkurence :)&lt;a class="headerlink" href="#konkurence" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Ještě bych měl zmínit, že kolega &lt;strong&gt;Wykys&lt;/strong&gt; vytvořil také toolchain, který je o dost
jednodušší a tím pádem i přehlednější:&lt;/p&gt;
&lt;p class="center"&gt;&lt;a href="https://gitlab.com/wykys/stm8-tools"&gt;https://gitlab.com/wykys/stm8-tools&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="vyvojove-prostredi"&gt;Vývojové prostředí&lt;a class="headerlink" href="#vyvojove-prostredi" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Jako editor a vývojové prostředí doporučuji 
&lt;a href="https://chytrosti.marrek.cz/vscodecodium.html"&gt;VScodium/VScode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Instalace je popsána &lt;a href="https://chytrosti.marrek.cz/vscodecodium.html#instalace"&gt;zde&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="kompilace"&gt;Kompilace&lt;a class="headerlink" href="#kompilace" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Popíšu tu celkem tři různá, mezi sebou se prolínající řešení. Špatná zpráva je,
že ani jedno z nich není 100%. Dobrá zpráva je, že při troše snahy se těm 100%
můžeme hodně přiblížit. Mezi jednotlivými řešeními se můžete snadno přepnout.&lt;/p&gt;
&lt;p&gt;K dispozici jsou tedy celkem tři &lt;code&gt;Makefile&lt;/code&gt; v adresáři 
&lt;a href="https://gitlab.com/spseol/mit-no/STM8S-toolchain/-/tree/main/.make"&gt;&lt;code&gt;.make&lt;/code&gt;&lt;/a&gt;.
Přepnutí jen realizováno jako symlink &lt;code&gt;Makefile&lt;/code&gt; do root-adresáře projektu.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;ls&lt;span class="w"&gt; &lt;/span&gt;-l&lt;span class="w"&gt; &lt;/span&gt;Makefile
lrwx&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;mar&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;led&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;.14&lt;span class="w"&gt; &lt;/span&gt;Makefile&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;.make/Makefile-sdcc-gas
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Na divných systémech, které symlink neumí (například Windows) se natvrdo kopíruje,
takže tato operace může být ztrátová. V &lt;em&gt;Makefile&lt;/em&gt; je vše připraveno, takže
stačí volat &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;switch-sdcc&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;# respektive&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;switch-sdccrm&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# respektive&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;switch-sdcc-gas&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;# respektive&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pokud váháte který zvolit, zvolte hned &lt;a href="#reseni-1-sdcc"&gt;první řešení: &lt;span class="caps"&gt;SDCC&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="reseni-1-sdcc"&gt;Řešení 1: &lt;span class="caps"&gt;SDCC&lt;/span&gt;&lt;a class="headerlink" href="#reseni-1-sdcc" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://sdcc.sourceforge.net/"&gt;&lt;span class="caps"&gt;SDCC&lt;/span&gt; - Small Device C Compiler&lt;/a&gt; je kompilátor
pro různé, více či méně známé 8-bitové architektury. Z hlediska &lt;span class="caps"&gt;STM8&lt;/span&gt; má jednu
zásadní nevýhodu: &lt;strong&gt;nedokáže odstranit nepoužívaný kód&lt;/strong&gt;. Co to znamená? No…
pokud si všechno píšete sami, tak to prakticky neznamená nic. Pokud ovšem
použijete nějakou knihovnu (jako například &lt;em&gt;&lt;span class="caps"&gt;SPL&lt;/span&gt;&lt;/em&gt;), tak už vám to začne hodně
vadit, protože výsledný strojový kód obsahuje spoustu funkcí, které jste
kompilovali jen proto, že byli součástí knihovny a ne proto, že jste je chtěli
použít. Tyto funkce nejsou nikde volány a proto by je měl 
&lt;a href="https://cs.wikipedia.org/wiki/Linker"&gt;linker&lt;/a&gt; odstranit. No a to je přesně to, co
se nestane &lt;code&gt;:-(&lt;/code&gt;.
Ve výsledku program, který by mohl mít cca 2-3 kB má 30 kB.&lt;/p&gt;
&lt;p&gt;Naštěstí existuje jeden &lt;a href="https://github.com/bschwand/STM8-SPL-SDCC"&gt;hack&lt;/a&gt;,
který funguje asi takto: Knihovna &lt;span class="caps"&gt;SPL&lt;/span&gt; se rozdělí do malých souborů a každý se
kompiluje jako samostatný modul. Z těchto modulů se udělá knihovna se kterou
&lt;span class="caps"&gt;SDCC&lt;/span&gt; linker už umí správně pracovat. Proto je v adresářové struktuře knihovna
&lt;span class="caps"&gt;SPL&lt;/span&gt; dvakrát. &lt;code&gt;SPLSPL&lt;/code&gt; znamená 
&lt;a href="https://gitlab.com/spseol/mit-no/spl/-/tree/main/SPLSPL"&gt;SPLit &lt;span class="caps"&gt;SPL&lt;/span&gt;&lt;/a&gt;
a používá se právě na toto.&lt;/p&gt;
&lt;p&gt;Další řešení tohoto problému je použít níže uvedené 
&lt;a href="#reseni-2-sdcc-gas"&gt;&lt;span class="caps"&gt;SDCC&lt;/span&gt;-gas&lt;/a&gt; nebo
&lt;a href="#reseni-3-sdccrm"&gt;sdccrm&lt;/a&gt;.&lt;/p&gt;
&lt;!--
Pokud zůstanete u SDCC dá se tento problém částečně obejít tím, že budete
kompilovat jen ty části *SPL*, které právě v tomto projektu potřebujete.
Velikost výsledného binárního souboru se tak rapidně zmenší, ale pokud budete
pracovat s čipem, který má jen 8&amp;nbsp;kB paměti programu, obávám se, že to
nemusí stačit....

V *Makefile* někde kolem řádku 77 najdete toto:

    :::make
    SPL_SOURCE  = stm8s_gpio.c stm8s_clk.c stm8s_tim4.c stm8s_itc.c 
    #SPL_SOURCE += stm8s_uart1.c
    SPL_SOURCE += stm8s_adc2.c
    #SPL_SOURCE += stm8s_flash.c
    #SPL_SOURCE += stm8s_tim1.c
    #SPL_SOURCE += stm8s_tim2.c
    #SPL_SOURCE += stm8s_tim3.c

... měli byste zakomentovat to, co nepotřebujete a odkomentovat jen to, co potřebujete.

--&gt;
&lt;p&gt;&lt;strong&gt;Instalace &lt;span class="caps"&gt;SDCC&lt;/span&gt; v Linuxu&lt;/strong&gt; je poměrně snadná, protože &lt;span class="caps"&gt;SDCC&lt;/span&gt; je součásti většiny
Linuxových distribucí; takže zavoláte něco jako:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apt install sdcc sdcc-libraries
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Ve Windows&lt;/strong&gt; si &lt;a href="https://sourceforge.net/projects/sdcc/files/"&gt;stáhnete
instalátor&lt;/a&gt; a pokračujte, ve
Windows oblíbeným klikáním.&lt;/p&gt;
&lt;h3 id="reseni-2-sdcc-gas"&gt;Řešení 2: &lt;span class="caps"&gt;SDCC&lt;/span&gt;-gas&lt;a class="headerlink" href="#reseni-2-sdcc-gas" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p class="center"&gt;&lt;a href="https://github.com/XaviDCR92/sdcc-gas"&gt;https://github.com/XaviDCR92/sdcc-gas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Toto je asi nejlepší řešení optimalizace (vyhození) mrtvého kódu. Vzniklo
přidáním podpory &lt;a href="https://cs.wikipedia.org/wiki/GNU_Assembler"&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt; Assembleru&lt;/a&gt;
tedy &lt;em&gt;gas&lt;/em&gt; do &lt;span class="caps"&gt;SDCC&lt;/span&gt; 3.9.0. &lt;a href="https://codedocs.org/what-is/gnu-assembler"&gt;gas&lt;/a&gt; je
výhodou i nevýhodou tohoto řešení. Na jednu stranu to znamená, že můžeme
používat klasické nástroje z &lt;a href="https://cs.wikipedia.org/wiki/GNU_binutils"&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt;
binutils&lt;/a&gt;, na druhou stranu to
znamená, že nelze použít ty části &lt;code&gt;sdcc-libraries&lt;/code&gt;, které jsou napsané v &lt;span class="caps"&gt;STM8&lt;/span&gt;
assembleru a je nutné použít méně optimální kód napsaný v C nebo &lt;span class="caps"&gt;STM8&lt;/span&gt; assembler
přepsat do &lt;span class="caps"&gt;GNU&lt;/span&gt; assembleru. …no a zřídka se stane, že nějaká vnitřní
funkcionalita (například násobení 64-bitových integerů) je napsaná jen v &lt;span class="caps"&gt;STM8&lt;/span&gt;
assembleru a vám nezbude, než to nějak obejít nebo danou funkci přepsat do &lt;span class="caps"&gt;GNU&lt;/span&gt; assembleru.&lt;/p&gt;
&lt;p&gt;Pokud vás to zajímá více můžete si počíst
&lt;a href="https://github.com/XaviDCR92/stm8-dce-example/issues/4#issuecomment-785013397"&gt;zde&lt;/a&gt;
a 
&lt;a href="https://github.com/XaviDCR92/stm8-dce-example/issues/2#issuecomment-700907460"&gt;zde&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Toto je důvod proč v &lt;em&gt;Makefile&lt;/em&gt; sdcc-gas jsou tyto řádky:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;SDCC_LIB_SRC_DIR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/usr/local/stow/sdcc-gas/share/sdcc/lib/src/
&lt;span class="nv"&gt;SDCC_LIB_SOURCE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;_mullong.c&lt;span class="w"&gt; &lt;/span&gt;_divulong.c&lt;span class="w"&gt; &lt;/span&gt;_mulint.c&lt;span class="w"&gt; &lt;/span&gt;_modsint.c
&lt;span class="c"&gt;#SDCC_LIB_SOURCE  = $(notdir $(wildcard /usr/local/stow/sdcc-gas/share/sdcc/lib/src/_*.c))&lt;/span&gt;
&lt;span class="nv"&gt;SDCC_LIB_OBJECTS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;addprefix&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;OUTPUT_DIR&lt;span class="k"&gt;)&lt;/span&gt;/,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;SDCC_LIB_SOURCE:.c&lt;span class="o"&gt;=&lt;/span&gt;.o&lt;span class="k"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Případné problémy chybějících funkcí lze tedy vyřešit doplněním jména souboru
do proměnné &lt;code&gt;SDCC_LIB_SOURCE&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Aby vše fungovalo musíte si &lt;a href="https://github.com/XaviDCR92/sdcc-gas"&gt;stáhnout&lt;/a&gt;
výše zmíněné zdrojové kódy a buildnout je. Já to dělám takto (používám
&lt;a href="https://packages.debian.org/stable/stow"&gt;stow&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;stow
sudo&lt;span class="w"&gt; &lt;/span&gt;apt&lt;span class="w"&gt; &lt;/span&gt;build-dep&lt;span class="w"&gt; &lt;/span&gt;sdcc

&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sdcc-gas
./configure&lt;span class="w"&gt; &lt;/span&gt;--prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/stow/sdcc-gas
make
sudo&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;install

&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/usr/local/stow
sudo&lt;span class="w"&gt; &lt;/span&gt;stow&lt;span class="w"&gt; &lt;/span&gt;sdcc-gas
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Podobný postup použijete pro 
&lt;a href="https://stm8-binutils-gdb.sourceforge.io/"&gt;&lt;span class="caps"&gt;STM8&lt;/span&gt; port&lt;/a&gt; &lt;span class="caps"&gt;GNU&lt;/span&gt; binutils, který 
je potřeba pro &lt;a href="https://cs.wikipedia.org/wiki/Linker"&gt;linkování&lt;/a&gt; a 
&lt;a href="https://cs.wikipedia.org/wiki/GNU_Debugger"&gt;debug&lt;/a&gt;.:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar&lt;span class="w"&gt; &lt;/span&gt;xzf&lt;span class="w"&gt; &lt;/span&gt;stm8-binutils-gdb-sources-2021-07-18.tar.gz
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;stm8-binutils-gdb-sources
&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/stow/stm8-binutils-gdb
./patch_binutils.sh
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;binutils-2.30
make
sudo&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;install

&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/usr/local/stow
sudo&lt;span class="w"&gt; &lt;/span&gt;stow&lt;span class="w"&gt;  &lt;/span&gt;stm8-binutils-gdb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Tato výše popsaná kompilace ze zdrojových kódů je teoreticky možná i na Windows,
pomocí projektu &lt;a href="https://www.cygwin.com/"&gt;Cygwin&lt;/a&gt;. Prakticky jsem to nikdy
nezkoušel. Osobně bych šel (tedy pokud by mě někdo donutil používat Widows)
spíše cestou
&lt;a href="https://cs.wikipedia.org/wiki/Windows_Subsystem_for_Linux"&gt;Windows Subsystem for 
Linux&lt;/a&gt;.
Instalace &lt;span class="caps"&gt;WSL&lt;/span&gt; 2 je 
&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install"&gt;velice jednoduchá&lt;/a&gt;.
Bohužel do &lt;span class="caps"&gt;WSL&lt;/span&gt; se nativně nedá připojit &lt;span class="caps"&gt;USB&lt;/span&gt; – ale dá se to
&lt;a href="https://devblogs.microsoft.com/commandline/connecting-usb-devices-to-wsl/"&gt;řešit&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="reseni-3-sdccrm"&gt;Řešení 3: sdccrm&lt;a class="headerlink" href="#reseni-3-sdccrm" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Poznámka:&lt;/p&gt;
&lt;p&gt;Toto řešení je v současné době spíše historický pozůstak a v 99,9% případů
není třeba se jim zabývat. Klidně si tento odstavec přečtěte, ale asi toto
řešení nebudete chtít použít…&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;sdccrm&lt;/code&gt; je nástroj pro optimalizaci mrtvého kódu pro port stm8 &lt;span class="caps"&gt;SDCC&lt;/span&gt;, který
odstraňuje nepoužívané funkce.&lt;/p&gt;
&lt;p class="center"&gt;&lt;a href="https://github.com/XaviDCR92/sdccrm"&gt;https://github.com/XaviDCR92/sdccrm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Jak to funguje?: Kód se nejprve zkompiluje do assembleru klasickým
&lt;a href="#reseni-1-sdcc"&gt;&lt;span class="caps"&gt;SDCC&lt;/span&gt;&lt;/a&gt;, poté se pomocí &lt;code&gt;sdccrm&lt;/code&gt; vymaže kód, který se nepoužívá,
celý proces se dokončí a kód se převede z assembleru do strojového kódu.&lt;/p&gt;
&lt;p&gt;Je to řešení tak nějak na půl cesty: Funguje, strojový kód je opravdu menší,
ale tato možnost &lt;strong&gt;&lt;a href="https://github.com/XaviDCR92/sdccrm#known-issues"&gt;vylučuje použití
debugeru&lt;/a&gt;&lt;/strong&gt;. To někdy, někomu
vadit může, jindy jinému to vadit nemusí.&lt;/p&gt;
&lt;p&gt;Dále je nutné &lt;strong&gt;ručně zadat&lt;/strong&gt; funkce, které nechcete “optimalizovat” – tedy vyhodit.
Proto je třeba sledovat chybová hlášení a název chybějící funkce zadat do
souboru &lt;code&gt;exclude_reference&lt;/code&gt; uvnitř projektového adresáře.&lt;/p&gt;
&lt;h4 id="instalace_1"&gt;Instalace&lt;a class="headerlink" href="#instalace_1" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;sdccrm&lt;/code&gt; si musíte buildnout ze zdrojových kódů. Jde o celkem malý program bez
závislostí, takže jde jednoduše kompilovat v Linuxu i ve Windows –
nicméně pro jistotu je Windows binárka součástí &lt;a href="#startovaci-toolchain"&gt;startovacího
toolsetu&lt;/a&gt; a je v souboru &lt;code&gt;.make/sdccrm.exe&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ve Windows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;choco&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;mingw&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;nebo v Linuxu:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apt&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;gcc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;a pak jen:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sdccrm
make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="flashing"&gt;Flashing&lt;a class="headerlink" href="#flashing" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="stvp"&gt;&lt;span class="caps"&gt;STVP&lt;/span&gt;&lt;a class="headerlink" href="#stvp" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.st.com/en/development-tools/stvp-stm8.html"&gt;&lt;span class="caps"&gt;STVP&lt;/span&gt;&lt;/a&gt; je software od
výrobce čipů &lt;span class="caps"&gt;ST&lt;/span&gt;. Umožňuje přístup do všech částí paměti mikrokontrolérů. Má
grafickou verzi i verzi pro příkazový řádek. Právě na verze pro příkazový řádek
se spoléhá zde zmiňovaný
&lt;a href="https://gitlab.com/spseol/mit-no/STM8S-toolchain"&gt;toolchain&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="openocd"&gt;OpenOCD&lt;a class="headerlink" href="#openocd" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://openocd.org"&gt;Open On-Chip Debugger&lt;/a&gt; je nástroj pro debug a krokování
programu přímo na čipu. &lt;code&gt;openocd&lt;/code&gt; umí i nahrát program do paměti zařízení.
Funguje v Linuxu i ve Windows.&lt;/p&gt;
&lt;p&gt;Instalaci zajistí na Linuxu jednoduchý příkaz:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install openocd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;na Windows je to díky &lt;a href="https://chytrosti.marrek.cz/chocolatey.html"&gt;Chocolatye&lt;/a&gt; podobně jednoduché.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;choco install openodc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!--
[Chocolatye už nabízí](https://community.chocolatey.org/packages?q=openocd)
verzi 0.11. Dříve to bylo jen 0.10. Tyto verze používají trochu jiné názvy
souborů, proto i příkaz vypadá jinak.     
Verze 0.10: `openocd  -f interface/stlink.cfg -f target/stm8s.cfg`      
Verze 0.11: `openocd  -f interface/stlink-dap.cfg -f target/stm8s.cfg`     
--&gt;
&lt;p&gt;Toto se řeší v &lt;em&gt;Makefile&lt;/em&gt; pomocí proměnné &lt;code&gt;OPENOCD&lt;/code&gt;, takže si ji případně upravte.&lt;/p&gt;
&lt;p&gt;Aby &lt;code&gt;openodc&lt;/code&gt; umělo i pouhé flashování, je třeba přidat 
&lt;a href="https://gist.github.com/fabiovila/cbcf073928c0eb8036d2d2da023629d0"&gt;skript&lt;/a&gt;,
který to umí. Ten je buď součástí
&lt;a href="#toolchain"&gt;startovacího toolsetu&lt;/a&gt; nebo ho můžete přidat
na konec konfiguračního souboru &lt;code&gt;stm8s.cfg&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;proc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;program_device&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;filename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;flashstart&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;halt&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;wait_halt&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;load_image&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;filename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;flashstart&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;sleep&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;reset&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;halt&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;resume&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;sleep&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nf"&gt;shutdown&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;V Linuxu by celá cesta mohla vypadat takto: &lt;code&gt;/usr/share/openocd/scripts/target/stm8s.cfg&lt;/code&gt;. 
Pokud jste do Windows instalovali pomocí Chocolatye, bude to nejspíš tato cesta:
&lt;code&gt;C:\ProgramData\chocolatey\lib\openocd\tools\OpenOCD-20190828-0.10.0\share\openocd\scripts\target\stm8s.cfg&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="stm8flash"&gt;stm8flash&lt;a class="headerlink" href="#stm8flash" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Druhá možnost je program &lt;code&gt;stm8flash&lt;/code&gt;. Ve většině linuxových distribucí je třeba
ho ručně buildnout.&lt;/p&gt;
&lt;p class="center"&gt;&lt;a href="https://github.com/vdudouyt/stm8flash"&gt;https://github.com/vdudouyt/stm8flash&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="debuging-ladeni"&gt;Debuging – Ladění&lt;a class="headerlink" href="#debuging-ladeni" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img alt="GDB maskot &amp;gt;&amp;gt;" src="https://sourceware.org/gdb/images/archer.svg"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;GDB&lt;/span&gt; (&lt;a href="https://cs.wikipedia.org/wiki/GNU_Debugger"&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt; Debugger&lt;/a&gt;) je standardní
nástroj na hledání chyb v software. Pokud budeme chtít program krokovat a  za
běhu se dívat do proměnných budeme potřebovat právě upravený 
&lt;a href="https://stm8-binutils-gdb.sourceforge.io/"&gt;&lt;span class="caps"&gt;STM8&lt;/span&gt;-&lt;span class="caps"&gt;GDB&lt;/span&gt;&lt;/a&gt;
z &lt;a href="https://cs.wikipedia.org/wiki/GNU_binutils"&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt; binutils&lt;/a&gt;
a &lt;a href="#openocd"&gt;OpenOCD&lt;/a&gt; (Open On Chip Debuger).&lt;/p&gt;
&lt;h3 id="stm8-gdb"&gt;&lt;span class="caps"&gt;STM8&lt;/span&gt;-&lt;span class="caps"&gt;GDB&lt;/span&gt;&lt;a class="headerlink" href="#stm8-gdb" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="caps"&gt;STM8&lt;/span&gt;-&lt;span class="caps"&gt;GDB&lt;/span&gt; je součástí &lt;span class="caps"&gt;GNU&lt;/span&gt; binutils. Instalaci jsem popsal výše. Pro přehlednost
ještě jednou:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar&lt;span class="w"&gt; &lt;/span&gt;xzf&lt;span class="w"&gt; &lt;/span&gt;stm8-binutils-gdb-sources-2021-07-18.tar.gz
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;stm8-binutils-gdb-sources
&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/stow/stm8-binutils-gdb
./patch_binutils.sh
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;binutils-2.30
make
sudo&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;install

&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/usr/local/stow
sudo&lt;span class="w"&gt; &lt;/span&gt;stow&lt;span class="w"&gt;  &lt;/span&gt;stm8-binutils-gdb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;No a teď samotný postup ladění:&lt;/p&gt;
&lt;h4 id="openocd_1"&gt;OpenOCD&lt;a class="headerlink" href="#openocd_1" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Nejprve je třeba pustit komunikaci s &lt;span class="caps"&gt;STM8&lt;/span&gt; čipem pomocí &lt;code&gt;openocd&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;openocd -f interface/stlink-dap.cfg -f target/stm8s.cfg -c "init" -c "reset halt"
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nebojte nemusíte to vždy znovu vypisovat. Je to napsané v &lt;em&gt;Makefile&lt;/em&gt;, takže
stačí zavolat&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;make openocd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="gdb"&gt;&lt;span class="caps"&gt;GDB&lt;/span&gt;&lt;a class="headerlink" href="#gdb" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;…. a teď v dalším terminálu otevřeme &lt;code&gt;gdb&lt;/code&gt; a dáme se do ladění. &lt;strong&gt;Než
provedete toto, ujistěte se, že &lt;a href="#openocd_1"&gt;openocd&lt;/a&gt; již běží&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;stm8-gdb --tui build-STM8S208/out-STM8S208.elf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;opět stačí zavolat &lt;code&gt;make&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;make debug
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ano, je to textové rozhraní, žádná klikátka ani pouťové efekty. Pouze &lt;a href="https://sourceware.org/gdb/onlinedocs/gdb/Continuing-and-Stepping.html"&gt;textové
příkazy&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id="rychlokurz-stm8-gdb"&gt;Rychlokurz &lt;span class="caps"&gt;STM8&lt;/span&gt;-&lt;span class="caps"&gt;GDB&lt;/span&gt;&lt;a class="headerlink" href="#rychlokurz-stm8-gdb" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;V programu funguje &lt;strong&gt;tabulátor&lt;/strong&gt;. To znamená, že při stisku klávesy &lt;code&gt;TAB&lt;/code&gt; se
&lt;span class="caps"&gt;GDB&lt;/span&gt; pokusí uhodnout, co chcete napsat a doplní slova tak, aby byla smysluplná.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;list main&lt;/code&gt;, &lt;code&gt;list main.c:20&lt;/code&gt;, &lt;code&gt;list main.c:setup&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;nalistuje ve zdrojovém kódu příslušné místo, řádek, funkci&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;b main&lt;/code&gt;, &lt;code&gt;break main&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;nastaví breakpoint na vstup do funkce &lt;code&gt;main&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;b 48&lt;/code&gt;, &lt;code&gt;break 48&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;nastaví breakpoint na řádek 48&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;b milis.c:48&lt;/code&gt;, &lt;code&gt;break milis.c:48&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;nastaví breakpoint na řádek 48 v souboru &lt;code&gt;milis.c&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;info b&lt;/code&gt;, &lt;code&gt;info breakpoints&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;vypíše informace o breakpointech&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;info sources&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;vypíše seznam zdrojových souborů&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;d 2&lt;/code&gt;. &lt;code&gt;delete 2&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;vymaže breakpoint 2&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;r&lt;/code&gt;, &lt;code&gt;run&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;spustí program&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;interrupt&lt;/code&gt;, Ctrl+C&lt;/dt&gt;
&lt;dd&gt;přeruší program, program se zastaví tam, kde zrovna teď je&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;s&lt;/code&gt;, &lt;code&gt;step&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;vykoná jeden příkaz/řádek zdrojového kódu&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;n&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;vykoná jeden příkaz/řádek zdrojového kódu, funkci vykoná jako jeden příkaz – nebude
vstupovat do funkce&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;fin&lt;/code&gt;, &lt;code&gt;finish&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;dokončí funkci, ve které se program právě nachází (pokud v ní není další breakpoint)&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;c&lt;/code&gt;, &lt;code&gt;cont&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;pokračuje v běhu programu, dokud nenarazí na breakpoint&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;p time&lt;/code&gt;, &lt;code&gt;print time&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;vypíše obsah proměnné &lt;code&gt;time&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;p time&lt;/code&gt;, &lt;code&gt;print time&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;vypíše obsah proměnné &lt;code&gt;time&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;display time&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;vypíše obsah proměnné &lt;code&gt;time&lt;/code&gt; pokaždé, když se program zastaví&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;undisplay 2&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;už nebude vypisovat řádek 2, když se program zastaví&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Zde něco málo více k příkazům 
&lt;a href="https://visualgdb.com/gdbreference/commands/print"&gt;print&lt;/a&gt;
a &lt;a href="https://visualgdb.com/gdbreference/commands/display"&gt;display&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="GDB %%" src="https://chytrosti.marrek.cz/mit/img/gdb.png"/&gt;&lt;/p&gt;
&lt;h3 id="stm8-debugger-for-vscodecodium"&gt;&lt;span class="caps"&gt;STM8&lt;/span&gt; Debugger for vsCode/Codium&lt;a class="headerlink" href="#stm8-debugger-for-vscodecodium" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p class="center"&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=CL.stm8-debug"&gt;https://marketplace.visualstudio.com/items?itemName=&lt;span class="caps"&gt;CL&lt;/span&gt;.stm8-debug&lt;/a&gt;&lt;/p&gt;</content><category term="MITka"></category><category term="STM8"></category><category term="programování"></category><category term="Céčko"></category></entry><entry><title>Dělení v pevné řadové čárce</title><link href="https://chytrosti.marrek.cz/deleni-v-pevne-radove-carce.html" rel="alternate"></link><published>2023-10-24T19:00:00+02:00</published><updated>2023-11-01T19:33:59+01:00</updated><author><name>Marrek Nožka</name></author><id>tag:chytrosti.marrek.cz,2023-10-24:/deleni-v-pevne-radove-carce.html</id><summary type="html">&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Fixed-point_arithmetic"&gt;Pevná řádová čárka&lt;/a&gt; je 
způsob jak v paměti reprezentovat reálné číslo. To je v paměti uloženo jako celé číslo
(int) ale při jeho reprezentaci se uvažuje, že je někde pomyslná desetinná&amp;nbsp;čárka.&lt;/p&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt;Proč bych něco takového chtěl? V Céčku přece můžu použít &lt;code&gt;flat&lt;/code&gt; a nemusím se dál o nic starat …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Fixed-point_arithmetic"&gt;Pevná řádová čárka&lt;/a&gt; je 
způsob jak v paměti reprezentovat reálné číslo. To je v paměti uloženo jako celé číslo
(int) ale při jeho reprezentaci se uvažuje, že je někde pomyslná desetinná&amp;nbsp;čárka.&lt;/p&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt;Proč bych něco takového chtěl? V Céčku přece můžu použít &lt;code&gt;flat&lt;/code&gt; a nemusím se dál o nic starat&amp;hellip; Nebo je to&amp;nbsp;jinak?&lt;/p&gt;
&lt;p&gt;Použití datového tipu &lt;code&gt;float&lt;/code&gt; není vždy možné nebo vás stojí příliš mnoho
paměti. Obzvlášť pokud programujete mikrokontrolery nemůžete s paměti
příliš plýtvat. A pokud byste chtěli použít &lt;code&gt;%f&lt;/code&gt; v funkci &lt;code&gt;printf&lt;/code&gt;
zjistíte, že váš program má najednou o 20kB víc. Tohle si nemůžete často&amp;nbsp;dovolit.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Například číslo &lt;span class="math"&gt;\(31.4160\)&lt;/span&gt; je v paměti uloženo jako celé číslo &lt;span class="math"&gt;\(314160\)&lt;/span&gt;.
Programátor ale ví, že číslo má dvě celá místa a čtyři desetinná místa.
S&amp;nbsp;číslem se pracuje jakoby šlo o celé číslo. Jen je třeba dát si pozor,
aby se nám při výpočtech a matematických operacích desetinná čárka nepatřičně
neposunula. Nejlépe je ukázat si vše na malém příkladu, kde bude vše snad&amp;nbsp;pochopitelné.&lt;/p&gt;
&lt;p&gt;Dejme tomu, že chci vydělit čísla 54321 a&amp;nbsp;1024.&lt;/p&gt;
&lt;div class="math"&gt;$$\frac{54321}{1024} = 53.0478 $$&lt;/div&gt;
&lt;p&gt;Dejme tomu, že chci pracovat s přesností na 2 desetinná&amp;nbsp;místa.&lt;/p&gt;
&lt;div class="math"&gt;$$\frac{54321}{1024} \cong 53.05 $$&lt;/div&gt;
&lt;p&gt;Použijeme pevnou řádová čárku, takže čitatele vynásobíme číslem 100. 
Pozor, pracujeme s celým číslem, takže i dělení je celočíselné &amp;ndash; bezezbytku.
To znamená, že se nám výsledek zaokrouhlí &lt;strong&gt;vždy dolů&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="math"&gt;$$\frac{100 \cdot 54321}{1024} = 5304 $$&lt;/div&gt;
&lt;p&gt;Aby byl výsledek správně zaokrouhlen použijeme malý fígl a k čitateli
připočteme ještě polovinu&amp;nbsp;jmenovatele:&lt;/p&gt;
&lt;div class="math"&gt;$$\frac{100 \cdot 54321 + \frac{1024}{2}}{1024} = 5305 $$&lt;/div&gt;
&lt;p&gt;Jak funguje tento fígl? No&amp;nbsp;&amp;hellip;&lt;/p&gt;
&lt;div class="math"&gt;$$\frac{\frac{x}{2}}{x} = \frac{1}{2} = 0.5$$&lt;/div&gt;
&lt;p&gt;To znamená, že k výsledku ještě před useknutím desetinné části (k tomu dochází
při celočíselném dělení) připočteme &lt;span class="math"&gt;\(0.5\)&lt;/span&gt;. Tak dojde ke&amp;nbsp;zaokrouhlení.&lt;/p&gt;
&lt;div class="math"&gt;$$5304.7 + 0.5 = 5305.3 \approx 5305$$&lt;/div&gt;
&lt;div class="math"&gt;$$75.3 + 0.5 = 75.8 \approx 75$$&lt;/div&gt;
&lt;p&gt;Teď už je výsledek správně a stačí jej pouze správně interpretovat. Nejprve
vytiskneme celou část &amp;ndash; tedy výsledek podělený číslem 100 a poté desetinnou
část &amp;ndash; ta je dána zbytkem po dělení číslem&amp;nbsp;100.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5305&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d.%02d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Celý příklad: 
&lt;a href="https://gitlab.com/spseol/mit-no/priklad-deleni_fixedpoint/-/blob/main/main.c?ref_type=heads"&gt;GitLab&lt;/a&gt;,
&lt;a href="https://replit.com/@MarrekNozka/deleni-fixedpoint#main.c"&gt;Repl.it&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pozor desetinnou část je třeba tisknout jako &lt;code&gt;"%02d"&lt;/code&gt;: to znamená a dvě místa
včetně nul na začátku.   &lt;br&gt;
Pokud bychom použili &lt;code&gt;"%d"&lt;/code&gt; vytisklo by se &lt;code&gt;53.5&lt;/code&gt;. &lt;br&gt;
Pokud bychom použili &lt;code&gt;"%2d"&lt;/code&gt; vytisklo by se &lt;code&gt;53. 5&lt;/code&gt;.  &lt;br&gt;
Až při použili &lt;code&gt;"%02d"&lt;/code&gt; se výsledek tiskne jako &lt;code&gt;53.05&lt;/code&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="MITka"></category><category term="Céčko"></category><category term="STM8"></category></entry><entry><title>Ultrazvukový měřič vzdálenosti pomocí timeru TIM2</title><link href="https://chytrosti.marrek.cz/ultrazvukovy-meric-vzdalenosti-pomoci-timeru-tim2.html" rel="alternate"></link><published>2021-05-07T12:34:30+02:00</published><updated>2021-05-07T12:34:30+02:00</updated><author><name>Marrek Nožka</name></author><id>tag:chytrosti.marrek.cz,2021-05-07:/ultrazvukovy-meric-vzdalenosti-pomoci-timeru-tim2.html</id><content type="html">
&lt;p&gt;zde se časem objeví zajímavý text :)&lt;/p&gt;
&lt;h2 id="zdrojove-kody"&gt;Zdrojové kódy&lt;a class="headerlink" href="#zdrojove-kody" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Kompletní zdrojové kódy naleznete v 
&lt;a href="https://github.com/spseol/STM8-TIM2-ultrasonic"&gt;repositáři&lt;/a&gt; na GitHubu:   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;základní princip – 
  &lt;a href="https://github.com/spseol/STM8-TIM2-ultrasonic/tree/princip"&gt;větev princip&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/spseol/STM8-TIM2-ultrasonic/blob/princip/src/main.c"&gt;main.c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;řešení typu Stavový automat – &lt;a href="https://github.com/spseol/STM8-TIM2-ultrasonic/tree/stav_automat"&gt;větev stav_automat&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/spseol/STM8-TIM2-ultrasonic/blob/stav_automat/src/main.c"&gt;main.c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="MITka"></category><category term="Céčko"></category><category term="STM8"></category><category term="timer"></category><category term="senzor"></category></entry><entry><title>Použití časovače jako generátoru PWM</title><link href="https://chytrosti.marrek.cz/pouziti-casovace-jako-generatoru-pwm.html" rel="alternate"></link><published>2021-05-07T12:30:25+02:00</published><updated>2021-05-07T12:30:25+02:00</updated><author><name>Marrek Nožka</name></author><id>tag:chytrosti.marrek.cz,2021-05-07:/pouziti-casovace-jako-generatoru-pwm.html</id><content type="html">
&lt;h2 id="tim2-a-tim3"&gt;&lt;span class="caps"&gt;TIM2&lt;/span&gt; a &lt;span class="caps"&gt;TIM3&lt;/span&gt;&lt;a class="headerlink" href="#tim2-a-tim3" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;zde se časem objeví zajímavý text :)&lt;/p&gt;
&lt;h2 id="zdrojove-kody"&gt;Zdrojové kódy&lt;a class="headerlink" href="#zdrojove-kody" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Kompletní zdrojové kódy naleznete v 
&lt;a href="https://github.com/spseol/STM8-TIM2-PWM/"&gt;repositáři&lt;/a&gt; na GitHubu:    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;RGB&lt;/span&gt; &lt;span class="caps"&gt;LED&lt;/span&gt; – &lt;a href="https://github.com/spseol/STM8-TIM2-PWM/tree/RGB_LED"&gt;RGB_LED&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/spseol/STM8-TIM2-PWM/blob/RGB_LED/src/main.c"&gt;main.c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="MITka"></category><category term="Céčko"></category><category term="STM8"></category><category term="timer"></category><category term="pwm"></category></entry><entry><title>Základní použití časovače</title><link href="https://chytrosti.marrek.cz/zakladni-pouziti-casovace.html" rel="alternate"></link><published>2021-05-07T11:36:34+02:00</published><updated>2021-05-07T11:36:34+02:00</updated><author><name>Marrek Nožka</name></author><id>tag:chytrosti.marrek.cz,2021-05-07:/zakladni-pouziti-casovace.html</id><summary type="html">
&lt;p&gt;Náš &lt;span class="caps"&gt;STM8S208RB&lt;/span&gt; má na těle celkem čtyři časovače: &lt;span class="caps"&gt;TIM1&lt;/span&gt;, &lt;span class="caps"&gt;TIM2&lt;/span&gt;, &lt;span class="caps"&gt;TIM3&lt;/span&gt; a &lt;span class="caps"&gt;TIM4&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id="tim4"&gt;&lt;span class="caps"&gt;TIM4&lt;/span&gt;&lt;a class="headerlink" href="#tim4" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="caps"&gt;TIM4&lt;/span&gt; je nejjednodušší. Čítač je 8-bitový a předdělička umožňuje dělit kmitočet
/1, /2, /4, /8, /16, /32, /64 a /128. Auto-reload register říká kam až se bude 
čítat – tedy nastavuje strop časovače.&lt;/p&gt;
&lt;p&gt;&lt;img alt="TIM4" src="https://chytrosti.marrek.cz/mit/img/tim4.png"/&gt;&lt;/p&gt;
&lt;p&gt;Nastavení se děje pomocí …&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Náš &lt;span class="caps"&gt;STM8S208RB&lt;/span&gt; má na těle celkem čtyři časovače: &lt;span class="caps"&gt;TIM1&lt;/span&gt;, &lt;span class="caps"&gt;TIM2&lt;/span&gt;, &lt;span class="caps"&gt;TIM3&lt;/span&gt; a &lt;span class="caps"&gt;TIM4&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id="tim4"&gt;&lt;span class="caps"&gt;TIM4&lt;/span&gt;&lt;a class="headerlink" href="#tim4" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="caps"&gt;TIM4&lt;/span&gt; je nejjednodušší. Čítač je 8-bitový a předdělička umožňuje dělit kmitočet
/1, /2, /4, /8, /16, /32, /64 a /128. Auto-reload register říká kam až se bude 
čítat – tedy nastavuje strop časovače.&lt;/p&gt;
&lt;p&gt;&lt;img alt="TIM4" src="https://chytrosti.marrek.cz/mit/img/tim4.png"/&gt;&lt;/p&gt;
&lt;p&gt;Nastavení se děje pomocí funkce &lt;code&gt;TIM4_TimeBaseInit(PRESCALER, PERIOD)&lt;/code&gt;, kde
&lt;code&gt;PRESCALER&lt;/code&gt; je makro, pro nastavení děličky a &lt;code&gt;PERIOD&lt;/code&gt; je 8-bitové číslo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;TIM4_TimeBaseInit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIM4_PRESCALER_128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Takže pokud máme nastaven kmitočet na 16MHz znamená to že čítač čítá do hodnoty
125 (respektive 124 protože čítáme od nuly) s frekvencí &lt;code&gt;16MHz/128 == 125 kHz&lt;/code&gt;.
Znamená to tedy, že každou milisekundu dojde k auto-reloadu a je vyvoláno
přerušení od časovače &lt;span class="caps"&gt;TIM4&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Aby vše fungovalo musíme:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;povolit &lt;span class="caps"&gt;TIM4&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;povolit přerušení od &lt;span class="caps"&gt;TIM4&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;globálně povolit přerušení&lt;/li&gt;
&lt;li&gt;napsat tělo obslužné rutiny přerušení.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;TIM4_Cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ENABLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="c1"&gt;// povolí TIM4&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;TIM4_ITConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIM4_IT_UPDATE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ENABLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// povolí přerušení od TIM4&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;enableInterrupts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="c1"&gt;// globálně povolí přerušení&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;......&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Rutina přerušení se standardně nachází v souboru &lt;code&gt;stm8_it.c&lt;/code&gt;. Stačí ji najít
přepsat. Pokud potřebujete v rutině přerušení pracovat s proměnnou definovanou
v &lt;code&gt;main.c&lt;/code&gt; (což je myslím téměř vždy) je třeba tuto proměnnou označit
direktivou &lt;code&gt;extern&lt;/code&gt; nebo rutinu přesunout přímo do souboru &lt;code&gt;main.c&lt;/code&gt;.
Více o tom se dočtete v postu
&lt;a href="https://chytrosti.marrek.cz/oddelena-kompilace-a-vlastni-knihovny.html"&gt;Kompilace a knihovny&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;/*---        rutina obsluhy přerušení         ---*/&lt;/span&gt;
&lt;span class="n"&gt;INTERRUPT_HANDLER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIM4_UPD_OVF_IRQHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TIM4_ClearFlag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIM4_FLAG_UPDATE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// vymažu vlajku signalizující přerušení&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;miliseconds&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="c1"&gt;// udělám co je třeba....&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Všimněte si prosím, že první, co se v rutině přerušení dělá, je, že se &lt;strong&gt;vymaže
vlajka&lt;/strong&gt;, která označuje, že k přerušení došlo.&lt;/p&gt;
&lt;p&gt;Tento kód je například použito v knihovně
&lt;a href="https://github.com/spseol/start-stm8/blob/main/src/milis.c"&gt;milis&lt;/a&gt;,
která umožňuje zjistit počet milisekund uplynulých od “spuštění programu”.&lt;/p&gt;
&lt;h2 id="tim2-a-tim3"&gt;&lt;span class="caps"&gt;TIM2&lt;/span&gt; a &lt;span class="caps"&gt;TIM3&lt;/span&gt;&lt;a class="headerlink" href="#tim2-a-tim3" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="caps"&gt;TIM2&lt;/span&gt; a &lt;span class="caps"&gt;TIM3&lt;/span&gt; je trochu složitější, ale zde ukážeme jen jeho základní použití.
(&lt;a href="https://cs.wikipedia.org/wiki/Pulzn%C4%9B_%C5%A1%C3%AD%C5%99kov%C3%A1_modulace"&gt;&lt;span class="caps"&gt;PWM&lt;/span&gt;&lt;/a&gt; necháme na samostatný post: 
&lt;a href="https://chytrosti.marrek.cz/pouziti-casovace-jako-generatoru-pwm.html"&gt;Použití časovače jako generátoru &lt;span class="caps"&gt;PWM&lt;/span&gt;&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;TIM2&lt;/span&gt;/3 je 16 bitový – může tedy čítat do 65535 a předdělička umožňuje dělit
/1, /2, /4, /8, /16, /32, /64, /128, /256, /512, /1024, /2048, /4096, /8192,
/16384 a /32768.&lt;/p&gt;
&lt;p&gt;Takže například pokud vytváříme cokoli, co pracuje s časem a potřebujeme
spustit určitý kód vždy přesně v intervalu &lt;span class="math"&gt;\(1\,\mathrm{s}\)&lt;/span&gt;, může inicializace
časovače vypadat například takto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;/*----           TIM2 setup           ---------*/&lt;/span&gt;
&lt;span class="n"&gt;TIM2_TimeBaseInit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIM2_PRESCALER_512&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;31250&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// 16MHz/512/31250 == 1Hz&lt;/span&gt;
&lt;span class="n"&gt;TIM2_Cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ENABLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="c1"&gt;// povolí TIM2&lt;/span&gt;
&lt;span class="n"&gt;TIM2_ITConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIM2_IT_UPDATE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ENABLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// povolí přerušení od TIM2&lt;/span&gt;
&lt;span class="n"&gt;enableInterrupts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="c1"&gt;// globálně povolí přerušení&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;nastavení &lt;span class="caps"&gt;TIM3&lt;/span&gt; je analogické:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;/*----           TIM3 setup           ---------*/&lt;/span&gt;
&lt;span class="n"&gt;TIM3_TimeBaseInit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIM3_PRESCALER_16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12345&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// ~81Hz&lt;/span&gt;
&lt;span class="n"&gt;TIM3_ITConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIM3_IT_UPDATE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ENABLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;TIM3_Cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ENABLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No a ještě rutiny přerušení… Opět platí, že &lt;strong&gt;rutiny přerušení buď necháme v souboru
&lt;code&gt;stm8_it.c&lt;/code&gt; a proměnné označíme pomocí direktivy &lt;code&gt;extern&lt;/code&gt; nebo si rutiny
přesuneme do modulu/souboru ve kterém je proměnná definována&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;INTERRUPT_HANDLER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIM2_UPD_OVF_BRK_IRQHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TIM2_ClearFlag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIM2_FLAG_UPDATE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;// vymažu vlaku signalizující &lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;udelam_neco_zajimaveho&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;a_jeste_neco_jineho&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;INTERRUPT_HANDLER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIM3_UPD_OVF_BRK_IRQHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TIM3_ClearFlag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TIM3_FLAG_UPDATE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;LED_REVERSE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="zdrojove-kody"&gt;Zdrojové kódy&lt;a class="headerlink" href="#zdrojove-kody" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Kompletní zdrojové kódy naleznete v repositáři na GitHubu: &lt;br/&gt;
&lt;a href="https://github.com/spseol/STM8-TIM23-zaklad"&gt;https://github.com/spseol/&lt;span class="caps"&gt;STM8&lt;/span&gt;-&lt;span class="caps"&gt;TIM23&lt;/span&gt;-zaklad&lt;/a&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="MITka"></category><category term="Céčko"></category><category term="STM8"></category><category term="timer"></category></entry><entry><title>Céčko — pác věcí, kterých byste si fakt měli všimnout</title><link href="https://chytrosti.marrek.cz/cecko-pac-veci-kterych-byste-si-fakt-meli-vsimnout.html" rel="alternate"></link><published>2021-04-23T07:44:00+02:00</published><updated>2023-03-29T14:05:10+02:00</updated><author><name>Marrek Nožka</name></author><id>tag:chytrosti.marrek.cz,2021-04-23:/cecko-pac-veci-kterych-byste-si-fakt-meli-vsimnout.html</id><summary type="html">
&lt;p&gt;Je hodně věcí, o kterých se dá mluvit v souvislosti s jazykem C. Nechci sem
psát učebnici, protože je jich napsaných spousta. Mám ale dojem, že je potřeba
napsat malý přehled toho, co byste měli v souvislosti s programováním
mikroprocesorů vzít jistě v potaz. Zde tedy nabízím výcuc, který by …&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Je hodně věcí, o kterých se dá mluvit v souvislosti s jazykem C. Nechci sem
psát učebnici, protože je jich napsaných spousta. Mám ale dojem, že je potřeba
napsat malý přehled toho, co byste měli v souvislosti s programováním
mikroprocesorů vzít jistě v potaz. Zde tedy nabízím výcuc, který by každý náš
student měl během 3. ročníku zvládnout.&lt;/p&gt;
&lt;p&gt;Nebo možná jinak: Vše, co je zde zmíněno (i to, na co se jen odkazuji) byste
fakt měli znát! Bez toho se nehnete. Buď je to zde přímo vysvětleno, nebo je 
zde odkaz na zdroj ze kterého byste to měli pochopit, ale v každém případě byste 
se tím měli vážně zabývat. &lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Učebnice:&lt;/dt&gt;
&lt;dd&gt;Klasika je &lt;a href="https://search.brave.com/search?q=+Pavel+Herout+U%C4%8Debnice+jazyka+C&amp;amp;source=web"&gt;učebnice jazyka C je ta od Pavla Herouta&lt;/a&gt;. Patří k ní i druhý díl, ale ten není pro embeded programování tolik důležitý.&lt;/dd&gt;
&lt;dd&gt;Další je &lt;a href="https://search.brave.com/search?q=kniha+%22C+pro+mikrokontrolery%22&amp;amp;source=web"&gt;C pro mikrokontrolery&lt;/a&gt;&lt;/dd&gt;
&lt;dd&gt;… a &lt;a href="https://search.brave.com/search?q=kniha+%22Programovac%C3%AD+jazyk+C+pro+zelen%C3%A1%C4%8De%22&amp;amp;source=web"&gt;Programovací jazyk C pro zelenáče&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;&lt;img alt="Nejlepší učebnice jazyka C je ta od Pavla Herouta %%" src="https://chytrosti.marrek.cz/mit/market1.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;Pokud hledáte nějaký online návod nebo referenční příručku, můžete začít třeba tu:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sallyx.org/sally/c/"&gt;https://www.sallyx.org/sally/c/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/c/"&gt;https://www.w3schools.com/c/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialspoint.com/cprogramming/index.htm"&gt;https://www.tutorialspoint.com/cprogramming/index.htm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="funkce-main-a-ostatni-funkce"&gt;Funkce &lt;code&gt;main&lt;/code&gt; a ostatní funkce&lt;a class="headerlink" href="#funkce-main-a-ostatni-funkce" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Hlavní program se nachází v funkci &lt;code&gt;main&lt;/code&gt;. Funkce main tedy musí být v každém
programu/projektu. V našem případě by funkce &lt;code&gt;main&lt;/code&gt; měla obsahovat nekonečnou
smyčku hlavního programu. Procesor musí stále něco dělat, proto musí běžet v
nekonečné smyčce. Nekonečnou smyčku vytvoříme pomocí cyklu &lt;code&gt;while&lt;/code&gt; nebo &lt;code&gt;for&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;udelej_to&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;udelej_tohle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(;;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;udelej_to&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;udelej_tohle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sallyx.org/sally/c/c04.php"&gt;více o struktuře programu a funkci &lt;code&gt;main&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Obecně vypadá hlavička &lt;a href="https://www.sallyx.org/sally/c/c13.php"&gt;funkce&lt;/a&gt; takto:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;datový_typ_návratové_hodnoty název_funkce(datový_typ_parametru jméno_parametru)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;konkrétně pak takto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;prevod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Funkce jménem &lt;code&gt;prevod&lt;/code&gt; vrací 16-bitové číslo datového typu &lt;code&gt;int16_t&lt;/code&gt;. Jako
parametry funkce přebírá dvě 8-bitová čísla &lt;code&gt;a&lt;/code&gt; a &lt;code&gt;b&lt;/code&gt; typu &lt;code&gt;int8_t&lt;/code&gt;.
Funkci potom můžeme volat třeba takto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int16_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cislo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;cislo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prevod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pokud funkce nic nevrací, nebo nemá žádné parametry použijeme klíčové slovo
&lt;code&gt;void&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;delay_1ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;_delay_us&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;_delay_us&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;_delay_us&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;_delay_us&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;248&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Když funkci voláme, musíme vždy uvést závorky, i když nepřebírá žádné parametry:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;delay_1ms&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jak-je-to-vlastne-s-kompilaci"&gt;Jak je to vlastně s kompilací?&lt;a class="headerlink" href="#jak-je-to-vlastne-s-kompilaci" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Mějme tento zdrojový text:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;"stm8s.h"&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;"milis.h"&lt;/span&gt;

&lt;span class="cp"&gt;#define LED_PORT GPIOC&lt;/span&gt;
&lt;span class="cp"&gt;#define LED_PIN  GPIO_PIN_5&lt;/span&gt;
&lt;span class="cp"&gt;#define LED_HIGH   GPIO_WriteHigh(LED_PORT, LED_PIN)&lt;/span&gt;
&lt;span class="cp"&gt;#define LED_LOW  GPIO_WriteLow(LED_PORT, LED_PIN)&lt;/span&gt;
&lt;span class="cp"&gt;#define LED_REVERSE GPIO_WriteReverse(LED_PORT, LED_PIN)&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;CLK_HSIPrescalerConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CLK_PRESCALER_HSIDIV1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;// taktovani MCU na 16MHz&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;GPIO_Init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LED_PIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_MODE_OUT_PP_LOW_SLOW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;GPIO_Init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BTN_PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;BTN_PIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_MODE_IN_FL_NO_IT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;init_milis&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;uint32_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;milis&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;333&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;LED_REVERSE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;milis&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;U jazyka C se převod zdrojového textu do strojové hexadecimální podoby děje v
několika fázích.&lt;/p&gt;
&lt;p&gt;Nejprve se zdrojový text předzpracuje pomocí &lt;strong&gt;preprocesoru&lt;/strong&gt; – ten vloží do
zdrojového textu hlavičkové soubory a expanduje všechna &lt;a href="#makra"&gt;&lt;em&gt;makra&lt;/em&gt;&lt;/a&gt;.
Všechny &lt;em&gt;direktivy&lt;/em&gt;, kterým rozumí preprocesor začínají znakem &lt;code&gt;#&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="překlad %%" src="https://chytrosti.marrek.cz/mit/compilation.png"/&gt;&lt;/p&gt;
&lt;p&gt;Následuje zpravování &lt;strong&gt;kompilátorem&lt;/strong&gt;. Ten převede zdrojový text do podoby
&lt;strong&gt;relativního objektového kódu&lt;/strong&gt; příslušného mikroprocesoru. To je již téměř
hotový program ve strojovém kódu, ale adresy použitých &lt;em&gt;proměnný&lt;/em&gt; a &lt;em&gt;funkcí&lt;/em&gt;
ještě nejsou známé a jsou tedy jen relativní. Výsledkem je objektový soubor s
příponou &lt;code&gt;.o&lt;/code&gt; nebo &lt;code&gt;.obj&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;V našem příkladu je volána funkce &lt;code&gt;GPIO_Init&lt;/code&gt;, jejíž tělo (definice) je ale
uvedena v jiném souboru, který se překládá samostatně. &lt;strong&gt;Kompilátor&lt;/strong&gt; tedy v
tuto chvíli nezná konkrétní adresu, na které se funkce nachází – proto/protože
neví na jaké konkrétní adrese v paměti mikropočítače bude funkce uložena.&lt;/p&gt;
&lt;p&gt;V poslední fázi se relativní adresy proměnných a funkcí nahradí skutečnými
adresami na kterých budou tyto proměnné a funkce uloženy v paměti
mikropočítače. Tato fáze se označuje jako &lt;strong&gt;linkování (linking time)&lt;/strong&gt; a
provádí je &lt;strong&gt;linker&lt;/strong&gt;. Jsou k tomu potřeba všechny objektové soubory celého
projektu: tedy zdrojový text s funkcí &lt;code&gt;main&lt;/code&gt; a všechny knihovny, které také
museli projít procesem kompilace. Teď už bude možné zavolat funkci &lt;code&gt;GPIO_Init&lt;/code&gt;,
protože linker do strojového kódu vloží její skutečnou adresu.&lt;/p&gt;
&lt;p&gt;Více je toto téma rozvedeno v postu
&lt;a href="https://chytrosti.marrek.cz/oddelena-kompilace-a-vlastni-knihovny.html"&gt;Oddělená kompilace a vlastní knihovny&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="zakladni-datovy-typy"&gt;Základní datový typy&lt;a class="headerlink" href="#zakladni-datovy-typy" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Při embeded programování potřebuje v naprosté většině případů pracovat s celými
čísly nebo s reálnými čísly pomocí &lt;a href="https://en.wikipedia.org/wiki/Fixed-point_arithmetic"&gt;pevné řádové
čárky&lt;/a&gt;. Je tedy třeba si
vystačit s celočíselnými datovými typy. C sice nabízí datový typ &lt;code&gt;float&lt;/code&gt;, ten
pro nás ale z důvodů omezené paměti není většinou vhodný.&lt;/p&gt;
&lt;p&gt;Klasické C nabízí 
&lt;a href="https://www.tutorialspoint.com/cprogramming/c_variables.htm"&gt;datové typy&lt;/a&gt;
&lt;code&gt;char&lt;/code&gt;, &lt;code&gt;short int&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long int&lt;/code&gt;, &lt;code&gt;long long int&lt;/code&gt;.
Specifikace ale neuvádí konkrétní počet bitů, který se pro daný datový typ má 
použít – toto závisí na konkrétním kompilátoru a každý kompilátor to má jinak.
Jediná zaručená věc je toto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;short&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Operátor &lt;a href="https://www.tutorialspoint.com/sizeof-operator-in-c"&gt;&lt;code&gt;sizeof&lt;/code&gt;&lt;/a&gt;
vrací počet bytů, použitých v paměti pro danou proměnnou.&lt;/p&gt;
&lt;p&gt;Například kompilátor &lt;span class="caps"&gt;SDCC&lt;/span&gt; to má takto:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;type&lt;/th&gt;
&lt;th align="left"&gt;počet bit&lt;/th&gt;
&lt;th align="left"&gt;počet byte&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;char&lt;/td&gt;
&lt;td align="left"&gt;8 bits&lt;/td&gt;
&lt;td align="left"&gt;1 byte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;short&lt;/td&gt;
&lt;td align="left"&gt;16 bits&lt;/td&gt;
&lt;td align="left"&gt;2 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;int&lt;/td&gt;
&lt;td align="left"&gt;16 bits&lt;/td&gt;
&lt;td align="left"&gt;2 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;long&lt;/td&gt;
&lt;td align="left"&gt;32 bit&lt;/td&gt;
&lt;td align="left"&gt;4 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;long long&lt;/td&gt;
&lt;td align="left"&gt;64 bit&lt;/td&gt;
&lt;td align="left"&gt;8 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Protože každý kompilátor je trošku jiný nikdy si nemůžete být jistí, kolik
paměti kompilátor proměnné přiřadil používají se v embeded programování
datové typy které to zaručují a kde je vše jasné hned na první pohled.
My je máme definovány v knihovně &lt;span class="caps"&gt;SPL&lt;/span&gt; a jsou dostupné jakmile zavoláme
&lt;code&gt;#include stm8s.h&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Je pravidlem, že vlastní/uživatelské datové typy užívají postfix &lt;code&gt;_t&lt;/code&gt;.
Písmeno &lt;code&gt;u&lt;/code&gt; na začátku znamená &lt;code&gt;unsigned&lt;/code&gt; – tedy bez znaménka. Do takové
proměnné můžeme tedy ukládat pouze kladná čísla.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="right"&gt;type&lt;/th&gt;
&lt;th align="center"&gt;znaménko&lt;/th&gt;
&lt;th align="center"&gt;počet bit&lt;/th&gt;
&lt;th align="center"&gt;číselný rozsah&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="right"&gt;int8_t&lt;/td&gt;
&lt;td align="center"&gt;kladná i záporná&lt;/td&gt;
&lt;td align="center"&gt;8&lt;/td&gt;
&lt;td align="center"&gt;-128 až 127&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;uint8_t&lt;/td&gt;
&lt;td align="center"&gt;nezáporná&lt;/td&gt;
&lt;td align="center"&gt;8&lt;/td&gt;
&lt;td align="center"&gt;0 až 255&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;int16_t&lt;/td&gt;
&lt;td align="center"&gt;kladná i záporná&lt;/td&gt;
&lt;td align="center"&gt;16&lt;/td&gt;
&lt;td align="center"&gt;-32.768 až 32.767&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;uint16_t&lt;/td&gt;
&lt;td align="center"&gt;nezáporná&lt;/td&gt;
&lt;td align="center"&gt;16&lt;/td&gt;
&lt;td align="center"&gt;0 až 65535&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;int32_t&lt;/td&gt;
&lt;td align="center"&gt;kladná i záporná&lt;/td&gt;
&lt;td align="center"&gt;32&lt;/td&gt;
&lt;td align="center"&gt;-2.147.483.648 až 2.147.483.647&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;uint32_t&lt;/td&gt;
&lt;td align="center"&gt;nezáporná&lt;/td&gt;
&lt;td align="center"&gt;32&lt;/td&gt;
&lt;td align="center"&gt;0 až 4.294.967.295&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Je myslím také dobré zmínit, že &lt;code&gt;int8_t&lt;/code&gt; je ekvivalent k &lt;code&gt;char&lt;/code&gt; a &lt;code&gt;uint8_t&lt;/code&gt; je
ekvivalent k &lt;code&gt;unsigned char&lt;/code&gt;. Rozdíl je ale v čitelnosti programu. Pokud
proměnnou deklaruji jako &lt;code&gt;char&lt;/code&gt; bude její hodnota zřejmě představovat nějaký
znak, jehož číselná hodnota je v ní uložena.&lt;/p&gt;
&lt;h2 id="rizeni-behu-programu"&gt;Řízení běhu programu&lt;a class="headerlink" href="#rizeni-behu-programu" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sallyx.org/sally/c/c12.php"&gt;Podmínky a cykly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pro
  &lt;a href="https://www.tutorialspoint.com/cprogramming/c_decision_making.htm"&gt;větvení&lt;/a&gt; se
  používá výraz:
  &lt;a href="https://www.tutorialspoint.com/cprogramming/if_statement_in_c.htm"&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt;,
  &lt;a href="https://www.tutorialspoint.com/cprogramming/if_else_statement_in_c.htm"&gt;&lt;code&gt;if .. else&lt;/code&gt;&lt;/a&gt;,
  &lt;a href="https://www.tutorialspoint.com/cprogramming/switch_statement_in_c.htm"&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialspoint.com/cprogramming/c_loops.htm"&gt;Cykly&lt;/a&gt; máme k
  dispozici ve třech podobách:
  &lt;a href="https://www.tutorialspoint.com/cprogramming/c_while_loop.htm"&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt;,
  &lt;a href="https://www.tutorialspoint.com/cprogramming/c_do_while_loop.htm"&gt;&lt;code&gt;do while&lt;/code&gt;&lt;/a&gt;,
  &lt;a href="https://www.tutorialspoint.com/cprogramming/c_for_loop.htm"&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="cisla-a-operace"&gt;Čísla a operace&lt;a class="headerlink" href="#cisla-a-operace" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Čísla a
&lt;a href="https://www.tutorialspoint.com/cprogramming/c_constants.htm"&gt;konstanty&lt;/a&gt; je
možné zapisovat v desítkové, osmičkové (prefix &lt;code&gt;0&lt;/code&gt;), šestnáctkové (prefix &lt;code&gt;0x&lt;/code&gt;)
nebo dvojkové (prefix &lt;code&gt;0b&lt;/code&gt;)soustavě. Přičemž písmenko na konci čísla (&lt;code&gt;U&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt;)
udává datový typ.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="cm"&gt;/* decimal */&lt;/span&gt;
&lt;span class="mo"&gt;0213&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="cm"&gt;/* octal */&lt;/span&gt;
&lt;span class="mh"&gt;0x4b&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="cm"&gt;/* hexadecimal */&lt;/span&gt;
&lt;span class="mb"&gt;0b100101&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="cm"&gt;/* binar */&lt;/span&gt;
&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="cm"&gt;/* int */&lt;/span&gt;
&lt;span class="mi"&gt;30U&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="cm"&gt;/* unsigned int */&lt;/span&gt;
&lt;span class="mf"&gt;30L&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="cm"&gt;/* long */&lt;/span&gt;
&lt;span class="mi"&gt;30UL&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="cm"&gt;/* unsigned long */&lt;/span&gt;
&lt;span class="mi"&gt;55123123123ULL&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="cm"&gt;/* unsigned long long */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Znaková konstanta&lt;/strong&gt; je číselná hodnota zadaná pomocí znaku. Konkrétní číselná
hodnota konkrétního znaku je dána &lt;a href="https://cs.wikipedia.org/wiki/ASCII"&gt;Ascii
tabulkou&lt;/a&gt;. Zapisuje se do apostrofů.&lt;/p&gt;
&lt;p&gt;Oba tyto zápisy jsou ekvivalentní:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;znak&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;znak&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;'@'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;znak&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://www.tutorialspoint.com/cprogramming/c_operators.htm"&gt;Operátory&lt;/a&gt; zde
nebudu zevrubně popisovat ale jen zdůrazním následující:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Zaokrouhlování:&lt;/strong&gt;
Operátor &lt;code&gt;/&lt;/code&gt; je dělení a jeho výsledek závisí na tom, s jakým datovým typem je
proveden. My používáme většinou celá čísla. Je to tedy &lt;strong&gt;celočíselné&lt;/strong&gt; dělení.
Nedochází zde k zaokrouhlování, ale useknutí desetinné části, takže výraz
&lt;code&gt;40 / 21&lt;/code&gt; bude &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Operátor &lt;code&gt;%&lt;/code&gt; je zbytek po celočíselném dělení takže &lt;code&gt;40 % 21&lt;/code&gt; je &lt;code&gt;19&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Dále je třeba si dát pozor a neplést si &lt;em&gt;bitové&lt;/em&gt; a &lt;em&gt;logické&lt;/em&gt; operátory.
Logické operátory &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;span class="caps"&gt;AND&lt;/span&gt;, &lt;code&gt;||&lt;/code&gt; &lt;span class="caps"&gt;OR&lt;/span&gt; a &lt;code&gt;!&lt;/code&gt; &lt;span class="caps"&gt;NOT&lt;/span&gt; pracují s pravdivostní hodnotou.&lt;/p&gt;
&lt;p&gt;Například:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d je cislo mezi 13 a 23"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bitové operátory &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;span class="caps"&gt;AND&lt;/span&gt;, &lt;code&gt;|&lt;/code&gt; &lt;span class="caps"&gt;OR&lt;/span&gt;, &lt;code&gt;^&lt;/code&gt; &lt;span class="caps"&gt;EXOR&lt;/span&gt; a &lt;code&gt;~&lt;/code&gt; &lt;span class="caps"&gt;NOT&lt;/span&gt;, &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; provádí bitové
s čísly.&lt;/p&gt;
&lt;p&gt;Například:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="c1"&gt;// 1010&lt;/span&gt;
&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="c1"&gt;// 0111&lt;/span&gt;
&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="c1"&gt;//------ &amp;amp; --&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// 0010&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;nebo&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="c1"&gt;// 00000011&lt;/span&gt;
&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="c1"&gt;//----------- &amp;lt;&amp;lt; --&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;//  00001100&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="pravda-a-nepravda"&gt;Pravda a nepravda&lt;a class="headerlink" href="#pravda-a-nepravda" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Pravdivostní hodnota je reprezentována čísly &lt;code&gt;0&lt;/code&gt; a &lt;code&gt;1&lt;/code&gt;. To ale není vše.
&lt;strong&gt;Každé číslo může být použito jako pravdivostní hodnota.&lt;/strong&gt; Jako Nepravda –
&lt;code&gt;false&lt;/code&gt; se interpretuje pouze číslo &lt;code&gt;0&lt;/code&gt;. Všechna další čísla od nuly různá se
interpretují jako Pravda – &lt;code&gt;true&lt;/code&gt;. Tohoto se často využívá. Typické je to
například, když překládáme &lt;em&gt;masku&lt;/em&gt; přes číslo, abychom zjistili stav
jednotlivých bitů.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// tisk binární podoby čísla&lt;/span&gt;
&lt;span class="n"&gt;cislo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;0x5A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;maska&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"0b"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maska&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cislo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maska&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;maska&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maska&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://replit.com/@MarrekNozka/maska#main.c"&gt;Vyzkoušet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Maska zde nabývá hodnot 
&lt;code&gt;0b10000000&lt;/code&gt;,
&lt;code&gt;0b01000000&lt;/code&gt;,
&lt;code&gt;0b00100000&lt;/code&gt;,
&lt;code&gt;0b00010000&lt;/code&gt;,
&lt;code&gt;0b00001000&lt;/code&gt;,
&lt;code&gt;0b00000100&lt;/code&gt;,
&lt;code&gt;0b00000010&lt;/code&gt; a 
&lt;code&gt;0b00000001&lt;/code&gt;. Ve chvíli kdy nabude hodnotu &lt;code&gt;0b00000000&lt;/code&gt; z cyklu se vyskočí.
Podobných hodnot nabývá výraz &lt;code&gt;cislo &amp;amp; maska&lt;/code&gt; v podmínce &lt;code&gt;if&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="navratova-hodnota"&gt;Návratová hodnota&lt;a class="headerlink" href="#navratova-hodnota" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;V Céčku má každý výraz vždy sou návratovou hodnotu a tuto návratovou hodnotu
lze uložit do proměnné.&lt;/p&gt;
&lt;p&gt;Například &lt;code&gt;i++&lt;/code&gt;  nebo &lt;code&gt;++i&lt;/code&gt; přičítá k proměnné jedna. Rozdíl je ale právě v
návratové hodnotě. Pokud použijete &lt;code&gt;i++&lt;/code&gt;, nejprve se je vrácena hodnota &lt;code&gt;i&lt;/code&gt; a
potom teprve se přičte jedna. Pokud použijete &lt;code&gt;++i&lt;/code&gt;, nejprve se přičte jedna a
potom teprve se vrátí hodnota již inkrementovaného &lt;code&gt;i&lt;/code&gt;. Analogicky platí totéž pro
&lt;code&gt;i--&lt;/code&gt; a &lt;code&gt;--i&lt;/code&gt;;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// v j bude 3, v i bude 4&lt;/span&gt;

&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// v j bude 4, v i bude 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Podobně lze  návratovou hodnotu použít jako pravdivostní výraz v podmínkách a
cyklech. Například takto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://replit.com/@MarrekNozka/navratovahodnota#main.c"&gt;Vyzkoušet&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="ukazatele-pole-retezce"&gt;Ukazatele, pole, řetězce&lt;a class="headerlink" href="#ukazatele-pole-retezce" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sallyx.org/sally/c/c09.php"&gt;Pole a ukazatele&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ukazatel-pointer"&gt;Ukazatel – pointer&lt;a class="headerlink" href="#ukazatel-pointer" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Ukazatel&lt;/strong&gt; je proměnná, která neobsahuje data, ale adresu na které se nachází
data. Prostě a jednoduše ukazatel je proměnná obsahující adresu proměnné.
Proměnná typu ‘ukazatel na &lt;code&gt;int&lt;/code&gt;&lt;span class="quo"&gt;‘&lt;/span&gt; obsahuje adresu, na které se v paměti nachází
číslo typu &lt;code&gt;int&lt;/code&gt;. Ukazatel se deklaruje a vyhodnocuje pomocí operátoru &lt;code&gt;*&lt;/code&gt;.
Adresa paměti se získá pomocí operátoru &lt;code&gt;&amp;amp;&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cislo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ukazatel_cislo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ukazatel_dalsi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;cislo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="c1"&gt;// do proměnné cislo uložím 77&lt;/span&gt;
&lt;span class="n"&gt;ukazatel_cislo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;cislo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// ukazatel_cislo má v sobě uloženou adresu proměnné cislo&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ukazatel_cislo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;// v proměnné cislo je 123&lt;/span&gt;
&lt;span class="w"&gt;                         &lt;/span&gt;&lt;span class="c1"&gt;// (protože ukazatel_cislo ma v sobě adresu promenne cislo)&lt;/span&gt;

&lt;span class="n"&gt;ukazatel_dalsi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ukazatel_cislo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cislo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="c1"&gt;// vytiskne 123&lt;/span&gt;
&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ukazatel_dalsi&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;// vytiskne 123&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://replit.com/@MarrekNozka/ukazatel#main.c"&gt;Vyzkoušet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ukazatelů se dá použít, když mám například 32-bitovou proměnnou a potřebuji z
ní dostat odděleně čtyři 8-bitové (1B) proměnné. Mohlo by to vypadat 
&lt;a href="#3-ukazatele"&gt;například takto&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="pole-array"&gt;Pole – array&lt;a class="headerlink" href="#pole-array" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Pole&lt;/strong&gt; představuje kolekci několika hodnot stejného datového typu umístěného
v paměti vedle sebe jednu položku po druhé. Ke každé položce této kolekce lze
přistupovat zvlášť pomocí indexu.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cislo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pole&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;cislo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;pole&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cislo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pole&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Indexace pomocí []: %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pole&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Indexace ukazatele:  %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pole&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://replit.com/@MarrekNozka/pole#main.c"&gt;Vyzkoušet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pole a ukazatel jsou v Céčku velmi úzce svázané&lt;/strong&gt;. Proměnná &lt;code&gt;cislo&lt;/code&gt; je typově
kompatibilní s ukazatelem na int &lt;code&gt;int *&lt;/code&gt;. V proměnné &lt;code&gt;cislo&lt;/code&gt; je uložena adresa,
na které začíná kolekce deseti po sobě jdoucích hodnot.&lt;/p&gt;
&lt;p&gt;Ještě je potřeba říct, že Céčko nijak nehlídá jestli náhodou index nepřesáhl
stanovenou mez. Takže výraz &lt;code&gt;cislo[22] = 51;&lt;/code&gt; se normálně provede, ale přepíše
se část pamětí ve které se v danou chvíli nachází třeba jiná proměnná. To může
vést k naprosto neočekávanému pseudonáhodnému chování.&lt;/p&gt;
&lt;h3 id="retezec-string"&gt;Řetězec – string&lt;a class="headerlink" href="#retezec-string" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Řetězec&lt;/strong&gt; je “jen” pole znaků. Dá se s ním tedy pracovat stejně jako s polem.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;retezec&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Cecko je nejlepsi."&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%c, %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;retezec&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;retezec&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"KONEC"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://replit.com/@MarrekNozka/retezec#main.c"&gt;Vyzkoušet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Každý správný řetězec v Céčku končí znakem &lt;code&gt;\0&lt;/code&gt; s ascii hodnou 0 (nula). Podle
tohoto se dá spolehlivě rozpoznat, že řetězec už na konci – přestože paměť je
alokovaná pro více znaků než řetězec obsahuje.&lt;/p&gt;
&lt;h2 id="makra"&gt;Makra&lt;a class="headerlink" href="#makra" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Makra&lt;/strong&gt; &lt;a href="#jak-je-to-vlastne-s-kompilaci"&gt;preprocesoru&lt;/a&gt; představují velmi
mocný nástroj jak si zpřehlednit zdrojový kód. Při programování mikrokontrolérů
představuje definice správných maker více-méně nutnost, bez které se v kódu
velmi rychle ztratíte. Poměrně dobře jsou možnosti preprocesoru popsány 
na &lt;a href="https://www.sallyx.org/sally/c/c11.php"&gt;www.sallyx.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;V nejjednodušším případě je makro nějaká zkratka nebo konstanta. Všude, kde se
ve zdrojovém kódu vyskytne toto makro, je nahrazeno jeho obsahem. Případná
&lt;em&gt;změna&lt;/em&gt; tedy proběhne jen jednom místě – při definici. &lt;strong&gt;Makra se provádí
(expandují) ještě před zahájením kompilace&lt;/strong&gt;. To je velký a zásadní rozdíl
oproti proměnným, které se nachází v paměti.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define MAX 12&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;MAX&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAX&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MAX&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;putchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://replit.com/@MarrekNozka/makro#main.c"&gt;Vyzkoušet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;V našem případě budeme marka používat pro pojmenování jednotlivých pinů. To je
velmi užitečné, protože budeme moci s minimálním zásahem do kódu přemístit
jednotlivé periferie nebo portovat projekt na jiný mikrokontroler.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#define LED_PORT GPIOC&lt;/span&gt;
&lt;span class="cp"&gt;#define LED_PIN  GPIO_PIN_5&lt;/span&gt;
&lt;span class="cp"&gt;#define NCODER_CLK_PORT GPIOB&lt;/span&gt;
&lt;span class="cp"&gt;#define NCODER_CLK_PIN GPIO_PIN_5&lt;/span&gt;
&lt;span class="cp"&gt;#define NCODER_DATA_PORT GPIOB&lt;/span&gt;
&lt;span class="cp"&gt;#define NCODER_DATA_PIN GPIO_PIN_4&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;GPIO_Init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED_PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LED_PIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_MODE_OUT_PP_LOW_SLOW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;GPIO_Init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NCODER_CLK_PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NCODER_CLK_PIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_MODE_IN_FL_NO_IT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;GPIO_Init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NCODER_DATA_PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NCODER_DATA_PIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GPIO_MODE_IN_FL_NO_IT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Já osobně si ještě dělám vždy sadu maker s parametrem, která mi umožňuje
efektivně číst a zapisovat stav jednotlivých pinů (operátor &lt;code&gt;##&lt;/code&gt; provádí sřetězení):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#define LOW(BAGR) GPIO_WriteLow(BAGR##_PORT, BAGR##_PIN)&lt;/span&gt;
&lt;span class="cp"&gt;#define HIGH(BAGR) GPIO_WriteHigh(BAGR##_PORT, BAGR##_PIN)&lt;/span&gt;
&lt;span class="cp"&gt;#define REVERSE(BAGR) GPIO_WriteReverse(BAGR##_PORT, BAGR##_PIN)&lt;/span&gt;

&lt;span class="cp"&gt;#define READ(BAGR) GPIO_ReadInputPin(BAGR##_PORT, BAGR##_PIN) &lt;/span&gt;
&lt;span class="cp"&gt;#define PUSH(BAGR) (GPIO_ReadInputPin(BAGR##_PORT, BAGR##_PIN)==RESET) &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Místo poměrně těžkopádného:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;GPIO_WriteHigh(CLK_PORT, CLK_PIN);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;… můžu napsat &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;HIGH(CLK);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Kód se tak lépe zapisuje, čte i portuje na jinou platformu.&lt;/p&gt;
&lt;h2 id="dalsi-datove-typy"&gt;Další datové typy&lt;a class="headerlink" href="#dalsi-datove-typy" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sallyx.org/sally/c/c15.php#struct"&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sallyx.org/sally/c/c16.php#enum"&gt;&lt;code&gt;enum&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sallyx.org/sally/c/c16.php#union"&gt;&lt;code&gt;union&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="jak-vice-bytovou-promennou-rozrezat-na-jednotlive-byte"&gt;Jak více-Bytovou proměnnou rozřezat na jednotlivé Byte.&lt;a class="headerlink" href="#jak-vice-bytovou-promennou-rozrezat-na-jednotlive-byte" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Pří práci s µkontrolerem a různými periferiemi lze poměrně často narazit na
úlohy typu: Mám data v 32-bitové (4-Bytové) proměnné, ale abych je mohl
zobrazit potřebuji každý Byte zvláště. Potřebuji tedy 32-bitovou proměnnou
rozdělit na čtyři 8-bitové proměnné. Dá se to udělat celkem asi třemi různými
způsoby. Mě osobně přijde nejhezčí a nejpřehlednější ten druhý.&lt;/p&gt;
&lt;h3 id="1-masky"&gt;1. Masky&lt;a class="headerlink" href="#1-masky" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;0x12345678&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;unsigned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;0xFF000000L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;0x00FF0000L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;0x0000FF00L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;0x000000FFL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Bytes: %02x %02x %02x %02x&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://replit.com/@MarrekNozka/masky#main.c"&gt;Vyzkoušet&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="2-uniony"&gt;2. Uniony&lt;a class="headerlink" href="#2-uniony" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;union&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;whole&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;union&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;whole&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;0x12345678&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Bytes: %02x %02x %02x %02x&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://replit.com/@MarrekNozka/union#main.c"&gt;Vyzkoušet&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="3-ukazatele"&gt;3. Ukazatele&lt;a class="headerlink" href="#3-ukazatele" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cislo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;0x12345678&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;unsigned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ukazatel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// ukazatel na int přetypujeme na ukazatel na char&lt;/span&gt;
&lt;span class="c1"&gt;// tím se jedna velká buňka rozdělí na 4 malé buňky&lt;/span&gt;
&lt;span class="n"&gt;ukazatel&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;cislo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Bytes: %02X %02X %02X %02X&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ukazatel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ukazatel&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ukazatel&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ukazatel&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://replit.com/@MarrekNozka/bajty#main.c"&gt;Vyzkoušet&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="moduly-a-externi-promenne"&gt;Moduly a externí proměnné&lt;a class="headerlink" href="#moduly-a-externi-promenne" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Toto téma naleznete v samostatném postu
&lt;a href="https://chytrosti.marrek.cz/oddelena-kompilace-a-vlastni-knihovny.html"&gt;Oddělená kompilace a vlastní knihovny&lt;/a&gt;.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;img alt="Pavel Herout napsal i druhý díl učebnice, který ale pro mikroprocesory nevyužijeme %%" src="https://chytrosti.marrek.cz/mit/market2.jpg"/&gt;&lt;/p&gt;</content><category term="MITka"></category><category term="Céčko"></category><category term="STM8"></category></entry><entry><title>Oddělená kompilace a vlastní knihovny</title><link href="https://chytrosti.marrek.cz/oddelena-kompilace-a-vlastni-knihovny.html" rel="alternate"></link><published>2021-04-23T07:44:00+02:00</published><updated>2023-03-29T14:07:26+02:00</updated><author><name>Marrek Nožka</name></author><id>tag:chytrosti.marrek.cz,2021-04-23:/oddelena-kompilace-a-vlastni-knihovny.html</id><content type="html">&lt;p&gt;Pracuju na tom&amp;nbsp;:).&lt;/p&gt;</content><category term="MITka"></category><category term="Céčko"></category><category term="STM8"></category></entry></feed>